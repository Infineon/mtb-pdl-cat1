<?xml version="1.0" encoding="utf-8"?>


<!--****************************************************************************
* \file port_intrinsic-1.0.cypersonality
*
* \brief
* Intrinsic port personality description file.
*
********************************************************************************
* \copyright
* Copyright (c) (2024), Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<PersonalityTemplate id="port_intrinsic" name="Port-Intrinsic" intrinsic="true" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v9">
  <FittingRules>
    <MappingRules>
      <IpBlock name="mxs40ioss,mxs40sioss,mxs22ioss" />
      <Resource name="ioss\.port" />
    </MappingRules>
  </FittingRules>
  <ExposedMembers/>
  <Parameters>
    <ParamRange id="ioss" name="" group="" default="`${getInstNumber(&quot;ioss&quot;)}`" min="0" max="9999" resolution="1" visible="false" editable="false" desc="The ioss number this personality is instantiated on." />
    <ParamRange id="port" name="" group="" default="`${getInstNumber(&quot;port&quot;)}`" min="0" max="127" resolution="1" visible="false" editable="false" desc="The port number this personality is instantiated on." />

    <Repeat count="8">
      <ParamString id="pinRsc$idx" name="pinRsc$idx" group="Internal" default="ioss[`${ioss}`].port[`${port}`].pin[$idx]" visible="false" editable="false" desc="" />
      <ParamBool id="pinExs$idx" name="pinExs$idx" group="Internal" default="`${hasBlock(pinRsc$idx)}`" visible="false" editable="false" desc="" />
      <ParamBool id="pinUsed$idx" name="pinUsed$idx" group="Internal" default="`${pinExs$idx ? isBlockUsed(pinRsc$idx) : false}`" visible="false" editable="false" desc="" />
    </Repeat>

  </Parameters>
  <DRCs />
  <ConfigFirmware>
    <ConfigExternVariable name="`${(pinUsed0 ? getOrDefault(getExposedMember(pinRsc0, &quot;intr&quot;), false) : false) ? getExposedMember(pinRsc0, &quot;cb&quot;) . &quot;(void)&quot; : &quot;&quot;}`" type="void" const="false" include="`${pinUsed0 ? getOrDefault(getExposedMember(pinRsc0, &quot;intr&quot;), false) : false}`" />
    <ConfigExternVariable name="`${(pinUsed1 ? getOrDefault(getExposedMember(pinRsc1, &quot;intr&quot;), false) : false) ? getExposedMember(pinRsc1, &quot;cb&quot;) . &quot;(void)&quot; : &quot;&quot;}`" type="void" const="false" include="`${pinUsed1 ? getOrDefault(getExposedMember(pinRsc1, &quot;intr&quot;), false) : false}`" />
    <ConfigExternVariable name="`${(pinUsed2 ? getOrDefault(getExposedMember(pinRsc2, &quot;intr&quot;), false) : false) ? getExposedMember(pinRsc2, &quot;cb&quot;) . &quot;(void)&quot; : &quot;&quot;}`" type="void" const="false" include="`${pinUsed2 ? getOrDefault(getExposedMember(pinRsc2, &quot;intr&quot;), false) : false}`" />
    <ConfigExternVariable name="`${(pinUsed3 ? getOrDefault(getExposedMember(pinRsc3, &quot;intr&quot;), false) : false) ? getExposedMember(pinRsc3, &quot;cb&quot;) . &quot;(void)&quot; : &quot;&quot;}`" type="void" const="false" include="`${pinUsed3 ? getOrDefault(getExposedMember(pinRsc3, &quot;intr&quot;), false) : false}`" />
    <ConfigExternVariable name="`${(pinUsed4 ? getOrDefault(getExposedMember(pinRsc4, &quot;intr&quot;), false) : false) ? getExposedMember(pinRsc4, &quot;cb&quot;) . &quot;(void)&quot; : &quot;&quot;}`" type="void" const="false" include="`${pinUsed4 ? getOrDefault(getExposedMember(pinRsc4, &quot;intr&quot;), false) : false}`" />
    <ConfigExternVariable name="`${(pinUsed5 ? getOrDefault(getExposedMember(pinRsc5, &quot;intr&quot;), false) : false) ? getExposedMember(pinRsc5, &quot;cb&quot;) . &quot;(void)&quot; : &quot;&quot;}`" type="void" const="false" include="`${pinUsed5 ? getOrDefault(getExposedMember(pinRsc5, &quot;intr&quot;), false) : false}`" />
    <ConfigExternVariable name="`${(pinUsed6 ? getOrDefault(getExposedMember(pinRsc6, &quot;intr&quot;), false) : false) ? getExposedMember(pinRsc6, &quot;cb&quot;) . &quot;(void)&quot; : &quot;&quot;}`" type="void" const="false" include="`${pinUsed6 ? getOrDefault(getExposedMember(pinRsc6, &quot;intr&quot;), false) : false}`" />
    <ConfigExternVariable name="`${(pinUsed7 ? getOrDefault(getExposedMember(pinRsc7, &quot;intr&quot;), false) : false) ? getExposedMember(pinRsc7, &quot;cb&quot;) . &quot;(void)&quot; : &quot;&quot;}`" type="void" const="false" include="`${pinUsed7 ? getOrDefault(getExposedMember(pinRsc7, &quot;intr&quot;), false) : false}`" />

    <ConfigStruct name="ioss_`${ioss}`_port_`${port}`_interrupt" type="cy_stc_sysint_t" const="false" public="true"
                  include="`${(pinUsed0 ? getOrDefault(getExposedMember(pinRsc0, &quot;intr&quot;), false) : false) |
                              (pinUsed1 ? getOrDefault(getExposedMember(pinRsc1, &quot;intr&quot;), false) : false) |
                              (pinUsed2 ? getOrDefault(getExposedMember(pinRsc2, &quot;intr&quot;), false) : false) |
                              (pinUsed3 ? getOrDefault(getExposedMember(pinRsc3, &quot;intr&quot;), false) : false) |
                              (pinUsed4 ? getOrDefault(getExposedMember(pinRsc4, &quot;intr&quot;), false) : false) |
                              (pinUsed5 ? getOrDefault(getExposedMember(pinRsc5, &quot;intr&quot;), false) : false) |
                              (pinUsed6 ? getOrDefault(getExposedMember(pinRsc6, &quot;intr&quot;), false) : false) |
                              (pinUsed7 ? getOrDefault(getExposedMember(pinRsc7, &quot;intr&quot;), false) : false)}`" >
      <Member name="intrSrc" value="ioss_interrupts_sec_gpio_`${port}`_IRQn" />
      <Member name="intrPriority" value="1UL" />
    </ConfigStruct>

    <ConfigFunction signature="void ioss_`${ioss}`_port_`${port}`_ISR(void)"  public="false"
                    include="`${(pinUsed0 ? getOrDefault(getExposedMember(pinRsc0, &quot;intr&quot;), false) : false) |
                                (pinUsed1 ? getOrDefault(getExposedMember(pinRsc1, &quot;intr&quot;), false) : false) |
                                (pinUsed2 ? getOrDefault(getExposedMember(pinRsc2, &quot;intr&quot;), false) : false) |
                                (pinUsed3 ? getOrDefault(getExposedMember(pinRsc3, &quot;intr&quot;), false) : false) |
                                (pinUsed4 ? getOrDefault(getExposedMember(pinRsc4, &quot;intr&quot;), false) : false) |
                                (pinUsed5 ? getOrDefault(getExposedMember(pinRsc5, &quot;intr&quot;), false) : false) |
                                (pinUsed6 ? getOrDefault(getExposedMember(pinRsc6, &quot;intr&quot;), false) : false) |
                                (pinUsed7 ? getOrDefault(getExposedMember(pinRsc7, &quot;intr&quot;), false) : false)}`"
                    body="    `${(pinUsed0 ? getOrDefault(getExposedMember(pinRsc0, &quot;intr&quot;), false) : false) ? &quot;if (0UL != Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT&quot; . port . &quot;, 0UL))&#13;    {&#13;        &quot; . getExposedMember(pinRsc0, &quot;cb&quot;) . &quot;();&#13;        Cy_GPIO_ClearInterrupt(GPIO_PRT&quot; . port . &quot;, 0UL);&#13;    }&#13;    &quot;  :
                &quot;&quot;}``${(pinUsed1 ? getOrDefault(getExposedMember(pinRsc1, &quot;intr&quot;), false) : false) ? &quot;if (0UL != Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT&quot; . port . &quot;, 1UL))&#13;    {&#13;        &quot; . getExposedMember(pinRsc1, &quot;cb&quot;) . &quot;();&#13;        Cy_GPIO_ClearInterrupt(GPIO_PRT&quot; . port . &quot;, 1UL);&#13;    }&#13;    &quot;  :
                &quot;&quot;}``${(pinUsed2 ? getOrDefault(getExposedMember(pinRsc2, &quot;intr&quot;), false) : false) ? &quot;if (0UL != Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT&quot; . port . &quot;, 2UL))&#13;    {&#13;        &quot; . getExposedMember(pinRsc2, &quot;cb&quot;) . &quot;();&#13;        Cy_GPIO_ClearInterrupt(GPIO_PRT&quot; . port . &quot;, 2UL);&#13;    }&#13;    &quot;  :
                &quot;&quot;}``${(pinUsed3 ? getOrDefault(getExposedMember(pinRsc3, &quot;intr&quot;), false) : false) ? &quot;if (0UL != Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT&quot; . port . &quot;, 3UL))&#13;    {&#13;        &quot; . getExposedMember(pinRsc3, &quot;cb&quot;) . &quot;();&#13;        Cy_GPIO_ClearInterrupt(GPIO_PRT&quot; . port . &quot;, 3UL);&#13;    }&#13;    &quot;  :
                &quot;&quot;}``${(pinUsed4 ? getOrDefault(getExposedMember(pinRsc4, &quot;intr&quot;), false) : false) ? &quot;if (0UL != Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT&quot; . port . &quot;, 4UL))&#13;    {&#13;        &quot; . getExposedMember(pinRsc4, &quot;cb&quot;) . &quot;();&#13;        Cy_GPIO_ClearInterrupt(GPIO_PRT&quot; . port . &quot;, 4UL);&#13;    }&#13;    &quot;  :
                &quot;&quot;}``${(pinUsed5 ? getOrDefault(getExposedMember(pinRsc5, &quot;intr&quot;), false) : false) ? &quot;if (0UL != Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT&quot; . port . &quot;, 5UL))&#13;    {&#13;        &quot; . getExposedMember(pinRsc5, &quot;cb&quot;) . &quot;();&#13;        Cy_GPIO_ClearInterrupt(GPIO_PRT&quot; . port . &quot;, 5UL);&#13;    }&#13;    &quot;  :
                &quot;&quot;}``${(pinUsed6 ? getOrDefault(getExposedMember(pinRsc6, &quot;intr&quot;), false) : false) ? &quot;if (0UL != Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT&quot; . port . &quot;, 6UL))&#13;    {&#13;        &quot; . getExposedMember(pinRsc6, &quot;cb&quot;) . &quot;();&#13;        Cy_GPIO_ClearInterrupt(GPIO_PRT&quot; . port . &quot;, 6UL);&#13;    }&#13;    &quot;  :
                &quot;&quot;}``${(pinUsed7 ? getOrDefault(getExposedMember(pinRsc7, &quot;intr&quot;), false) : false) ? &quot;if (0UL != Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT&quot; . port . &quot;, 7UL))&#13;    {&#13;        &quot; . getExposedMember(pinRsc7, &quot;cb&quot;) . &quot;();&#13;        Cy_GPIO_ClearInterrupt(GPIO_PRT&quot; . port . &quot;, 7UL);&#13;    }&#13;    &quot;  :
                &quot;&quot;}`" />

    <ConfigInstruction purpose="INITIALIZE" value="Cy_SysInt_Init(&amp;ioss_`${ioss}`_port_`${port}`_interrupt, ioss_`${ioss}`_port_`${port}`_ISR);"
                       include="`${(pinUsed0 ? getOrDefault(getExposedMember(pinRsc0, &quot;intr&quot;), false) : false) |
                                   (pinUsed1 ? getOrDefault(getExposedMember(pinRsc1, &quot;intr&quot;), false) : false) |
                                   (pinUsed2 ? getOrDefault(getExposedMember(pinRsc2, &quot;intr&quot;), false) : false) |
                                   (pinUsed3 ? getOrDefault(getExposedMember(pinRsc3, &quot;intr&quot;), false) : false) |
                                   (pinUsed4 ? getOrDefault(getExposedMember(pinRsc4, &quot;intr&quot;), false) : false) |
                                   (pinUsed5 ? getOrDefault(getExposedMember(pinRsc5, &quot;intr&quot;), false) : false) |
                                   (pinUsed6 ? getOrDefault(getExposedMember(pinRsc6, &quot;intr&quot;), false) : false) |
                                   (pinUsed7 ? getOrDefault(getExposedMember(pinRsc7, &quot;intr&quot;), false) : false)}`" />
    <ConfigInstruction purpose="INITIALIZE" value="NVIC_ClearPendingIRQ(ioss_interrupts_sec_gpio_`${port}`_IRQn);"
                       include="`${(pinUsed0 ? getOrDefault(getExposedMember(pinRsc0, &quot;intr&quot;), false) : false) |
                                   (pinUsed1 ? getOrDefault(getExposedMember(pinRsc1, &quot;intr&quot;), false) : false) |
                                   (pinUsed2 ? getOrDefault(getExposedMember(pinRsc2, &quot;intr&quot;), false) : false) |
                                   (pinUsed3 ? getOrDefault(getExposedMember(pinRsc3, &quot;intr&quot;), false) : false) |
                                   (pinUsed4 ? getOrDefault(getExposedMember(pinRsc4, &quot;intr&quot;), false) : false) |
                                   (pinUsed5 ? getOrDefault(getExposedMember(pinRsc5, &quot;intr&quot;), false) : false) |
                                   (pinUsed6 ? getOrDefault(getExposedMember(pinRsc6, &quot;intr&quot;), false) : false) |
                                   (pinUsed7 ? getOrDefault(getExposedMember(pinRsc7, &quot;intr&quot;), false) : false)}`" />
    <ConfigInstruction purpose="INITIALIZE" value="NVIC_EnableIRQ(ioss_interrupts_sec_gpio_`${port}`_IRQn);"
                       include="`${(pinUsed0 ? getOrDefault(getExposedMember(pinRsc0, &quot;intr&quot;), false) : false) |
                                   (pinUsed1 ? getOrDefault(getExposedMember(pinRsc1, &quot;intr&quot;), false) : false) |
                                   (pinUsed2 ? getOrDefault(getExposedMember(pinRsc2, &quot;intr&quot;), false) : false) |
                                   (pinUsed3 ? getOrDefault(getExposedMember(pinRsc3, &quot;intr&quot;), false) : false) |
                                   (pinUsed4 ? getOrDefault(getExposedMember(pinRsc4, &quot;intr&quot;), false) : false) |
                                   (pinUsed5 ? getOrDefault(getExposedMember(pinRsc5, &quot;intr&quot;), false) : false) |
                                   (pinUsed6 ? getOrDefault(getExposedMember(pinRsc6, &quot;intr&quot;), false) : false) |
                                   (pinUsed7 ? getOrDefault(getExposedMember(pinRsc7, &quot;intr&quot;), false) : false)}`" />
  </ConfigFirmware>
</PersonalityTemplate>
