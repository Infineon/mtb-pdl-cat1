<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file hppass_output_pulse_trigger-1.0.cypersonality
* \version 1.0
*
* \brief
* HPPASS Output Pulse Trigger personality description file.
*
********************************************************************************
* \copyright
* (c) (2024), Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
*
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<PersonalityTemplate id="hppass_out_pulse_trig" name="Output Pulse Trigger" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v9">
  <FittingRules>
    <MappingRules>
    <IpBlock name="mxs40mcpass" />
    <Resource name="pass\.output_pulse_trigger"/>
    </MappingRules>
  </FittingRules>
  <ExposedMembers>
    <ExposedMember key="srcSel" paramId="srcSel" />
  </ExposedMembers>
  <Parameters>
    <ParamBool id="debug" name="debug" group="General" default="false" visible="false" editable="false" desc="" />
    <ParamRange id="inst" name="inst" group="Internal" default="`${getInstNumber(&quot;output_pulse_trigger&quot;)}`" min="0" max="7" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamChoice id="srcSel" name="Trigger Source" group="General" default="CY_HPPASS_DISABLED" visible="true" editable="true" desc="Pulse trigger signal source selection">
        <Entry name="Disabled"              value="CY_HPPASS_DISABLED"    visible="true" />
        <Entry name="SAR ADC Group 0 Done"  value="CY_HPPASS_SAR_GROUP_0" visible="true" />
        <Entry name="SAR ADC Group 1 Done"  value="CY_HPPASS_SAR_GROUP_1" visible="true" />
        <Entry name="SAR ADC Group 2 Done"  value="CY_HPPASS_SAR_GROUP_2" visible="true" />
        <Entry name="SAR ADC Group 3 Done"  value="CY_HPPASS_SAR_GROUP_3" visible="true" />
        <Entry name="SAR ADC Group 4 Done"  value="CY_HPPASS_SAR_GROUP_4" visible="true" />
        <Entry name="SAR ADC Group 5 Done"  value="CY_HPPASS_SAR_GROUP_5" visible="true" />
        <Entry name="SAR ADC Group 6 Done"  value="CY_HPPASS_SAR_GROUP_6" visible="true" />
        <Entry name="SAR ADC Group 7 Done"  value="CY_HPPASS_SAR_GROUP_7" visible="true" />
        <Entry name="SAR ADC FIR 0 Done"    value="CY_HPPASS_FIR_0"       visible="true" />
        <Entry name="SAR ADC FIR 1 Done"    value="CY_HPPASS_FIR_1"       visible="true" />
        <Entry name="Autonomous Controller" value="CY_HPPASS_AC_TR"       visible="true" />
    </ParamChoice>
    <ParamSignal name="Output" port="tr_pulse_out[0]" group="General" visible="true" canBeEmpty="false" desc="Pulse Trigger output signal" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="DEFAULT" reason="">
          <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="INFO" reason="The pin Drive Mode parameter does not match expected.">
          <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>

    <Repeat count="8">
      <ParamString id="sarGroupRsc$idx" name="sarGroupRsc$idx" group="Internal" default="pass[0].sar[0].seq[0].grp[$idx]" visible="`${debug}`" editable="false" desc="" /> 
    </Repeat>
    
    <Repeat count="2">
      <ParamString id="sarFilterRsc$idx" name="sarFilterRsc$idx" group="Internal" default="pass[0].sar[0].filter[$idx]" visible="`${debug}`" editable="false" desc="" /> 
    </Repeat>

    <ParamString id="acRsc" name="acRsc" group="Internal" default="pass[0].ac[0]" visible="`${debug}`" editable="false" desc="" /> 

    <ParamString id="hppassRsc" name="hppassRsc" group="Internal" default="pass[0]" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="hppassUsed" name="hppassUsed" group="Internal" default="`${isBlockUsed(hppassRsc)}`" visible="`${debug}`" editable="false" desc="" />
    <Repeat count="16">
      <ParamString id="acStateRsc$idx" name="acStateRsc$idx" group="Internal" default="pass[0].ac[0].stt[0].vstate[$idx]" visible="`${debug}`" editable="false" desc="" />
    </Repeat>
  </Parameters>
  <DRCs>
    <DRC type="ERROR" text="HPPASS should be enabled and configured" condition="`${!hppassUsed}`" >
      <FixIt action="ENABLE_BLOCK" target="`${hppassRsc}`" value="hppass-1.0" valid="true" />
    </DRC>
    <DRC type="ERROR" text="SAR ADC Group $idx should be enabled and configured" condition="`${(srcSel eq (&quot;CY_HPPASS_SAR_GROUP_&quot; . $idx)) &amp;&amp; (!isBlockUsed(sarGroupRsc$idx))}`" repeatCount="8" >
      <FixIt action="ENABLE_BLOCK" target="`${sarGroupRsc$idx}`" value="hppass_sar_seq_grp-1.0" valid="true" />
    </DRC>
    <DRC type="ERROR" text="SAR Filter $idx should be enabled and configured" condition="`${(srcSel eq (&quot;CY_HPPASS_FIR_&quot; . $idx)) &amp;&amp; (!isBlockUsed(sarFilterRsc$idx))}`" repeatCount="2" >
      <FixIt action="ENABLE_BLOCK" target="`${sarFilterRsc$idx}`" value="hppass_sar_filter-1.0" valid="true" />
    </DRC>
    <DRC type="ERROR" text="Send Trigger/Interrupt should be enabled in at least one AC state" condition="`${ !((isBlockUsed(acStateRsc0)  ? getExposedMember(acStateRsc0,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc1)  ? getExposedMember(acStateRsc1,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc2)  ? getExposedMember(acStateRsc2,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc3)  ? getExposedMember(acStateRsc3,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc4)  ? getExposedMember(acStateRsc4,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc5)  ? getExposedMember(acStateRsc5,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc6)  ? getExposedMember(acStateRsc6,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc7)  ? getExposedMember(acStateRsc7,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc8)  ? getExposedMember(acStateRsc8,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc9)  ? getExposedMember(acStateRsc9,  &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc10) ? getExposedMember(acStateRsc10, &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc11) ? getExposedMember(acStateRsc11, &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc12) ? getExposedMember(acStateRsc12, &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc13) ? getExposedMember(acStateRsc13, &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc14) ? getExposedMember(acStateRsc14, &quot;intr&quot;) : false) ||
                                                                                                                (isBlockUsed(acStateRsc15) ? getExposedMember(acStateRsc15, &quot;intr&quot;) : false)) &amp;&amp; 
                                                                                                                (srcSel eq CY_HPPASS_AC_TR)}`" />
  </DRCs>
  <ConfigFirmware>
    <ConfigDefine name="`${INST_NAME}`_IDX" value="`${inst}`U" public="true" include="true" />
  </ConfigFirmware>
</PersonalityTemplate>
