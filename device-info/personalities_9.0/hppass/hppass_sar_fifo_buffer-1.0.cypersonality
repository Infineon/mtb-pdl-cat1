<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file hppass_sar_fifo_buffer-1.0.cypersonality
* \version 1.0
*
* \brief
* HPPASS SAR FIFO Buffer personality description file.
*
********************************************************************************
* \copyright
* (c) (2024), Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
*
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<PersonalityTemplate id="hppass_fifo_buffer" name="FIFO Buffer" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v9">
  <FittingRules>
    <MappingRules>
      <IpBlock name="mxs40mcpass" />
      <Resource name="pass\.sar\.fifo\.buffer"/>
    </MappingRules>
  </FittingRules>
  <ExposedMembers>
    <ExposedMember key="trig" paramId="trig" />
    <ExposedMember key="level" paramId="level" />
    <ExposedMember key="cb" paramId="cb" />
    <ExposedMember key="cbName" paramId="cbName" />
  </ExposedMembers>
  <Parameters>
    <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
    <ParamString id="fifoRsc" name="fifoRsc" group="Internal" default="pass[0].sar[0].fifo[0]" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="split" name="split" group="Internal" default="`${getExposedMember(fifoRsc, &quot;split&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="levelMax" name="levelMax" group="Internal" default="`${(split eq &quot;CY_HPPASS_FIFO_1_32&quot;) ? 32 :
                                                                           (split eq &quot;CY_HPPASS_FIFO_2_16&quot;) ? 16 : 8}`" min="0" max="32" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="inst" name="inst" group="Internal" default="`${getInstNumber(&quot;buffer&quot;)}`" min="0" max="3" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="level" name="Level" group="General" default="1" min="1" max="`${levelMax}`" resolution="1" visible="true" editable="true" desc="Buffer level threshold" />
    <ParamSignal port="tr_fifo_level_out[0]" name="Trigger Output" group="General" desc="The FIFO output trigger connection" visible="true" canBeEmpty="true" />
    <ParamBool id="trig" name="trig" group="Internal" default="`${hasConnection(&quot;tr_fifo_level_out&quot;, 0)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="cb" name="Interrupt Callback" group="General" default="false" visible="true" editable="true" desc="Enable the interrupt callback for this FIFO buffer" />
    <ParamDoc id="doc" name="Interrupt Help" group="General" default="file:///`${cy_libs_path()}`/docs/pdl_api_reference_manual/html/doc_personality_hppass_fifo_1.0.html" linkText="Open FIFO Interrupts Configuration Documentation" visible="`${cb}`" desc="Opens the Peripheral Driver Library Documentation" />
    <ParamString id="cbName" name="Callback Name" group="General" default="`${INST_NAME}`_callback" visible="`${cb}`" editable="`${cb}`" desc="FIFO interrupt callback name: &lt;br&gt;&lt;br&gt;&#13;&#10;A valid unique C function identifier should be provided here. The function should be defined in the application. It should have the following signature:&lt;br&gt;&lt;br&gt;&#13;&#10;void callback(void);" />
    <ParamBool id="cbNameOk" name="cbNameOk" group="Internal" default="`${hasMatch(cbName, &quot;(^[_]+[0-9a-zA-Z]|^[a-zA-Z])[0-9a-zA-Z_]*$&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="sarRsc" name="sarRsc" group="Internal" default="pass[0].sar[0]" visible="false" editable="false" desc="" />
    <ParamBool id="sarUsed" name="sarUsed" group="Internal" default="`${isBlockUsed(sarRsc)}`" visible="false" editable="false" desc="" />
    <Repeat count="4">
      <ParamString id="bufRsc$idx" name="bufRsc$idx" group="Internal" default="pass[0].sar[0].fifo[0].buffer[$idx]" visible="false" editable="false" desc="" />
      <ParamBool id="bufUsed$idx" name="bufUsed$idx" group="Internal" default="`${isBlockUsed(bufRsc$idx)}`" visible="false" editable="false" desc="" />
    </Repeat>
    <ParamRange id="bufUsed" name="bufUsed" group="Internal" default="`${(bufUsed0 ? 1 : 0) + (bufUsed1 ? 1 : 0) + (bufUsed2 ? 1 : 0) + (bufUsed3 ? 1 : 0)}`" min="0" max="4" resolution="1" visible="`${debug}`" editable="false" desc="" />
  </Parameters>
  <DRCs>
    <DRC type="ERROR" text="SAR should be enabled and configured" condition="`${!sarUsed}`" >
      <FixIt action="ENABLE_BLOCK" target="`${sarRsc}`" value="hppass_sar-1.0" valid="true" />
    </DRC>
    <DRC type="ERROR" text="Invalid Callback Name" condition="`${!cbNameOk}`">
      <FixIt action="SET_PARAM" target="cbName" value="`${INST_NAME}`_callback" valid="true" />
    </DRC>
    <DRC type="INFO" text="The FIFO is split by four 8-entry parts, because the Buffer 3 is used" condition="`${(inst == 3) &amp;&amp; (bufUsed &lt; 3)}`"/>
    <DRC type="INFO" text="The FIFO is split by four 8-entry parts, because the Buffer 2 is used" condition="`${(inst == 2) &amp;&amp; (bufUsed &lt; 3) &amp;&amp; !bufUsed3}`"/>
    <DRC type="INFO" text="The FIFO is split by two 16-entry parts, because the Buffer 1 is used" condition="`${(inst == 1) &amp;&amp; (bufUsed &lt; 2)}`"/>
  </DRCs>
  <ConfigFirmware>
    <ConfigDefine name="`${INST_NAME}`_READ_PTR" value="CY_HPPASS_SAR_FIFO_READ_PTR(`${inst}`U)" public="true" include="true" />
    <ConfigExternVariable name="`${cbName . &quot;(void)&quot;}`" type="void" const="false" include="`${cb}`" />
  </ConfigFirmware>
</PersonalityTemplate>
