<?xml version="1.0" encoding="utf-8"?>


<!--****************************************************************************
* \file pclk_v2.cypersonality
* \version 1.0
*
* \brief
* Peripheral Clock personality description file.
* This supports CAT1B, CAT1C and CAT1D devices.
*
********************************************************************************
* \copyright
* Copyright (c) (2020-2022), Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<Personality id="pclk_v2" name="Peripheral Clock" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v7">
  <Dependencies>
    <IpBlock name="mxperi_ver3,mxsperi" />
    <Resource name="peri\.group\.div_(8|16|16_5|24_5)" />
  </Dependencies>
  <ExposedMembers>
    <ExposedMember key="type" paramId="typeApiConst" />
    <ExposedMember key="number" paramId="number" />
    <ExposedMember key="clockSel" paramId="clockSel" />
    <ExposedMember key="frequency" paramId="frequency" />
    <ExposedMember key="divider" paramId="divider" />
    <ExposedMember key="accuracy" paramId="accuracy" />
    <ExposedMember key="error" paramId="srcNotUsed" />
  </ExposedMembers>
  <Parameters>
    <!-- PDL documentation -->
    <ParamDoc id="pdlDoc" name="Configuration Help" group="Overview" default="file:///`${cy_libs_path()}`/docs/pdl_api_reference_manual/html/group__group__sysclk__clk__peripheral.html" linkText="Open Peripherals Clock Dividers Documentation" visible="true" desc="Opens the Peripheral Driver Library Documentation" />

    <!-- Get the name of the source clock resource -->
    <ParamString id="sourceClockRscV1" name="Source Clock Resource V1" group="Internal" default="`${getInstNumber(&quot;group&quot;) eq 0 ? &quot;srss[0].clock[0].hfclk[0]&quot; : &quot;srss[0].clock[0].hfclk[1]&quot;}`" visible="false" editable="false" desc="" />
    <ParamString id="sourceClockRscV2" name="Source Clock Resource V2" group="Internal" default="`${getInstNumber(&quot;peri&quot;) eq 0 ?
                                                                                              (getInstNumber(&quot;group&quot;) eq 0 ? &quot;srss[0].clock[0].hfclk[0]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 1 ? &quot;srss[0].clock[0].hfclk[10]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 2 ? &quot;srss[0].clock[0].hfclk[9]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 3 ? &quot;srss[0].clock[0].hfclk[5]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 4 ? &quot;srss[0].clock[0].hfclk[6]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 5 ? &quot;srss[0].clock[0].hfclk[10]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 6 ? &quot;srss[0].clock[0].hfclk[13]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 7 ? &quot;srss[0].clock[0].hfclk[1]&quot; :
                                                                                               &quot;srss[0].clock[0].hfclk[11]&quot;) :
                                                                                              (getInstNumber(&quot;group&quot;) eq 0 ? &quot;srss[0].clock[0].hfclk[1]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 1 ? &quot;srss[0].clock[0].hfclk[7]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 2 ? &quot;srss[0].clock[0].hfclk[5]&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 3 ? &quot;srss[0].clock[0].hfclk[6]&quot; :
                                                                                               &quot;srss[0].clock[0].hfclk[0]&quot;)}`" visible="false" editable="false" desc="" />
    <ParamString id="sourceClockRscV3" name="Source Clock Resource V3" group="Internal" default="`${getInstNumber(&quot;group&quot;) eq 0 ? &quot;srss[0].clock[0].periclk[0]&quot; : &quot;srss[0].clock[0].hfclk[2]&quot;}`" visible="false" editable="false" desc="" />
    <ParamString id="sourceClockRsc" name="Source Clock Resource" group="Internal" default="`${&quot;mxsperi&quot; eq getIpBlockName() ? (getVersion() eq 1 ? sourceClockRscV1 : sourceClockRscV2) : sourceClockRscV3 }`" visible="false" editable="false" desc="" />

    <!-- Set an error if the source clock is not enabled or contains an error -->
    <ParamBool id="srcNotUsed" name="Clock Source Enabled" group="Internal" default="`${!isBlockUsed(sourceClockRsc)}`" visible="false" editable="false" desc="" />
    <ParamBool id="error" name="Clock Error" group="Internal" default="`${srcNotUsed || getExposedMember(sourceClockRsc, &quot;error&quot;)}`" visible="false" editable="false" desc="" />

    <!-- Source clock frequency -->
    <ParamRange  id="sourceFreq" name="sourceFrequency" group="Internal" default="`${!error ? getExposedMember(sourceClockRsc, &quot;frequency&quot;) : 0}`" min="0" max="400000000" resolution="1" visible="false" editable="false" desc="" />
    <ParamString id="accuracy" name="accuracy" group="General" default="`${!error ? getExposedMember(sourceClockRsc, &quot;accuracy&quot;) : 0}`" visible="false" editable="false" desc="" />
    <ParamString id="sourceFreqInfoV1" name="Source Clock V1" group="Internal" default="`${getInstNumber(&quot;group&quot;) eq 0 ? &quot;CLK_HF0&quot; : &quot;CLK_HF1&quot;}` (`${formatFrequency(sourceFreq,accuracy)}`)" visible="false" editable="false" desc="Source clock frequency" />
    <ParamString id="sourceFreqInfoV2" name="Source Clock V2" group="Internal" default="`${getInstNumber(&quot;peri&quot;) eq 0 ?
                                                                                              (getInstNumber(&quot;group&quot;) eq 0 ? &quot;CLK_HF0&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 1 ? &quot;CLK_HF10&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 2 ? &quot;CLK_HF9&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 3 ? &quot;CLK_HF5&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 4 ? &quot;CLK_HF6&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 5 ? &quot;CLK_HF10&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 6 ? &quot;CLK_HF13&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 7 ? &quot;CLK_HF1&quot; :
                                                                                               &quot;CLK_HF11&quot;) :
                                                                                              (getInstNumber(&quot;group&quot;) eq 0 ? &quot;CLK_HF1&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 1 ? &quot;CLK_HF7&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 2 ? &quot;CLK_HF5&quot; :
                                                                                               getInstNumber(&quot;group&quot;) eq 3 ? &quot;CLK_HF6&quot; :
                                                                                               &quot;CLK_HF0&quot;)}`  (`${formatFrequency(sourceFreq,accuracy)}`)" visible="false" editable="false" desc="Source clock frequency" />
    <ParamString id="sourceFreqInfoV3" name="Source Clock V3" group="Internal" default="`${getInstNumber(&quot;group&quot;) eq 0 ? &quot;CLK_PERI&quot; : &quot;CLK_HF2&quot;}` (`${formatFrequency(sourceFreq,accuracy)}`)" visible="false" editable="false" desc="Source clock frequency" />
    <ParamString id="sourceFreqInfo" name="Source Clock" group="General" default="`${&quot;mxsperi&quot; eq getIpBlockName() ? (getVersion() eq 1 ? sourceFreqInfoV1 : sourceFreqInfoV2) : sourceFreqInfoV3}`" visible="true" editable="false" desc="Source clock frequency" />

    <!-- Get the peripheral clock divider type, width and number -->
    <ParamChoice id="type" name="Divider type" group="Internal" default="`${getBlockType(2)}`" visible="false" editable="false" desc="">
      <Entry name="div_8"    value="div_8"    visible="true" />
      <Entry name="div_16"   value="div_16"   visible="true" />
      <Entry name="div_16_5" value="div_16_5" visible="true" />
      <Entry name="div_24_5" value="div_24_5" visible="true" />
    </ParamChoice>
    <ParamRange  id="width"  name="Divider width" group="Internal" default="`${type eq div_8 ? 8 : type eq div_24_5 ? 24 : 16}`" min="8" max="24" resolution="1" visible="false" editable="false" desc="" />
    <ParamRange  id="number" name="Divider number" group="Internal" default="`${getInstNumber(getBlockType(2))}`" min="0" max="63" resolution="1" visible="false" editable="false" desc="" />
    
    <!-- Determine if the divider is fractional -->
    <ParamBool   id="isFractional" name="isFractional" group="Internal" default="`${(type eq div_16_5) || (type eq div_24_5)}`" visible="false" editable="false" desc="" />

    <!-- Dividers -->
    <ParamRange  id="intDivider" name="`${isFractional ? &quot;Integer Divider&quot; : &quot;Divider&quot;}`" group="General" default="1" min="1" max="`${pow(2, width)}`" resolution="1" visible="true" editable="true" desc="" />
    <ParamRange  id="fracDivider" name="Fractional Divider" group="General" default="0" min="0" max="31" resolution="1" visible="`${isFractional}`" editable="true" desc="" />
    <ParamRange  id="divider" name="Divider" group="Internal" default="`${isFractional ? intDivider + fracDivider / 32.0 : intDivider}`" min="1" max="`${pow(2, width) + 31.0/32.0}`" resolution="0.00001" visible="false" editable="false" desc="" />

    <!-- Output frequency -->
    <ParamRange id="frequency" name="Frequency" group="General" default="`${cast(int64, ((sourceFreq / cast(float, divider) + 0.0005) * 1000)) / 1000.0}`" min="0" max="400000000" resolution="0.001" visible="false" editable="false" desc="The resulting output clock frequency" />
    
    <ParamString id="frequencyInfo" name="Frequency" group="General" default="`${formatFrequency(frequency,accuracy)}`" visible="true" editable="false" desc="The resulting output clock frequency" />

    <ParamBool   id="startOnReset" name="Start on Reset" group="General" default="true" visible="true" editable="true" desc="If checked, this option will cause the clock to be enabled by the clock initialization routine" />

    <ParamString id="typeApiConst" name="typeApiConst" group="Internal" default="`${type eq div_8    ? &quot;CY_SYSCLK_DIV_8_BIT&quot;   : 
                                                                                   type eq div_16   ? &quot;CY_SYSCLK_DIV_16_BIT&quot;   :
                                                                                   type eq div_16_5 ? &quot;CY_SYSCLK_DIV_16_5_BIT&quot; :
                                                                                                      &quot;CY_SYSCLK_DIV_24_5_BIT&quot;}`" visible="false" editable="false" desc="API constants for the divider type" />

    <ParamString id="typeApiConstHal" name="typeApiConst" group="Internal" default="`${type eq div_8    ? &quot;8BIT&quot;   : 
                                                                                   type eq div_16   ? &quot;16BIT&quot;   :
                                                                                   type eq div_16_5 ? &quot;16_5BIT&quot; :
                                                                                                      &quot;24_5BIT&quot;}`" visible="false" editable="false" desc="API constants for the divider type" />

    <ParamString id="clockSel" name="clockSel" group="Internal" default="`${typeApiConst}`, `${number}`U" visible="false" editable="false" desc="Divider type and number" />

    <ParamSignal port="clk[0]" name="Peripherals" group="General" visible="true" desc="This signal can be used to drive peripherals" canBeEmpty="true" />
  </Parameters>
  
  <DRCs>
    <DRC type="ERROR" text="CLK_HF1 clock is not enabled" condition="`${!isBlockUsed(&quot;srss[0].clock[0].hfclk[1]&quot;) &amp;&amp; (getInstNumber(&quot;group&quot;) &gt; 0) &amp;&amp; (&quot;mxsperi&quot; eq getIpBlockName())}`" >
      <FixIt action="ENABLE_BLOCK" target="`${&quot;srss[0].clock[0].hfclk[1]&quot;}`" value="" valid="true" />
    </DRC>
    <DRC type="ERROR" text="CLK_HF2 clock is not enabled" condition="`${!isBlockUsed(&quot;srss[0].clock[0].hfclk[2]&quot;) &amp;&amp; (getInstNumber(&quot;group&quot;) &gt; 0) &amp;&amp; (&quot;mxperi_ver3&quot; eq getIpBlockName())}`" >
      <FixIt action="ENABLE_BLOCK" target="`${&quot;srss[0].clock[0].hfclk[2]&quot;}`" value="" valid="true" />
    </DRC>
  </DRCs>

  <ConfigFirmware>
    <ConfigInclude value="cy_sysclk.h" include="true" />
    <ConfigInclude value="cyhal_hwmgr.h" include="true" guard="defined (CY_USING_HAL)" />
    
    <ConfigDefine name="`${INST_NAME}`_HW" value="CYHAL_CLOCK_BLOCK_PERIPHERAL`${getInstNumber(&quot;group&quot;)}`_`${typeApiConstHal}`" public="true" include="true" guard="defined (CY_USING_HAL)"/>
    <ConfigDefine name="`${INST_NAME}`_HW" value="`${typeApiConst}`" public="true" include="true" guard="!defined (CY_USING_HAL)"/>
    <ConfigDefine name="`${INST_NAME}`_NUM" value="`${number}`U" public="true" include="true" />
    <ConfigDefine name="`${toUpper(INST_NAME)}`_GRP_NUM" value="(`${getInstNumber(&quot;group&quot;)}`U &lt;&lt; PERI_PCLK_GR_NUM_Pos)" public="true" include="true" />
    <ConfigStruct name="`${INST_NAME}`_obj" type="cyhal_resource_inst_t" const="true" public="true" include="true" guard="defined (CY_USING_HAL)">
      <Member name="type" value="CYHAL_RSC_CLOCK" />
      <Member name="block_num" value="`${INST_NAME}`_HW" />
      <Member name="channel_num" value="`${INST_NAME}`_NUM" />
    </ConfigStruct>
    <ConfigInstruction value="Cy_SysClk_PeriPclkDisableDivider((en_clk_dst_t)`${toUpper(INST_NAME)}`_GRP_NUM, `${clockSel}`);" include="true"  />
    <ConfigInstruction value="Cy_SysClk_PeriPclkSetDivider((en_clk_dst_t)`${toUpper(INST_NAME)}`_GRP_NUM, `${clockSel}`, `${intDivider-1}`U);" include="`${!isFractional}`"  />
    <ConfigInstruction value="Cy_SysClk_PeriPclkSetFracDivider((en_clk_dst_t)`${toUpper(INST_NAME)}`_GRP_NUM, `${clockSel}`, `${intDivider-1}`U, `${fracDivider}`U);" include="`${isFractional}`"  />
    <ConfigInstruction value="Cy_SysClk_PeriPclkEnableDivider((en_clk_dst_t)`${toUpper(INST_NAME)}`_GRP_NUM, `${clockSel}`);" include="`${startOnReset}`"  />
    <ConfigInstruction value="cyhal_hwmgr_reserve(&amp;`${INST_NAME}`_obj);" include="true" guard="defined (CY_USING_HAL)" />
  </ConfigFirmware>
</Personality>
