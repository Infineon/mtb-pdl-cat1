<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file hppass_output_level_trigger-1.0.cypersonality
* \version 1.0
*
* \brief
* HPPASS Output Level Trigger personality description file.
*
********************************************************************************
* \copyright
* (c) (2024), Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
*
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<PersonalityTemplate id="hppass_out_level_trig" name="Output Level Trigger" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v9">
  <FittingRules>
    <MappingRules>
      <IpBlock name="mxs40mcpass" />
      <Resource name="pass\.output_level_trigger"/>
    </MappingRules>
  </FittingRules>
  <ExposedMembers>
    <ExposedMember key="sync" paramId="sync" />
    <ExposedMember key="compEn" paramId="compEn" />
    <ExposedMember key="limitEn" paramId="limitEn" />
  </ExposedMembers>
  <Parameters>
    <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
    <ParamRange id="inst" name="inst" group="Internal" default="`${getInstNumber(&quot;output_level_trigger&quot;)}`" min="0" max="7" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="sync" name="Sync" group="General" default="false" visible="true" editable="true" desc="If unchecked - the synchronizer is bypassed" />

    <Repeat count="5">
      <ParamBool id="compEn$idx" name="CSG Comparator $idx" group="General" default="false" visible="true" editable="true" desc="Comparator $idx output. All selected outputs are ORed together and routed to selected output." />
      <ParamString id="compRsc$idx" name="compRsc$idx" group="Internal" default="pass[0].csg[0].slice[$idx]" visible="`${debug}`" editable="false" desc="" />
    </Repeat>

    <Repeat count="8">
      <ParamBool id="limitEn$idx" name="SAR Limit $idx" group="General" default="false" visible="true" editable="true" desc="Limit Detector $idx output. All selected outputs are ORed together and routed to selected output." />
      <ParamString id="limitRsc$idx" name="limitRsc$idx" group="Internal" default="pass[0].sar[0].limit[$idx]" visible="`${debug}`" editable="false" desc="" />
    </Repeat>

    <ParamSignal name="Output" port="tr_level_out[0]" group="General" visible="true" canBeEmpty="false" desc="Level Trigger output signal" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="DEFAULT" reason="">
          <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="INFO" reason="The pin Drive Mode parameter does not match expected.">
          <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>

    <ParamString id="compEn" name="compEn" group="Internal" default="`${toHex((compEn0 ? 1&lt;&lt;0 : 0) |
                                                                              (compEn1 ? 1&lt;&lt;1 : 0) |
                                                                              (compEn2 ? 1&lt;&lt;2 : 0) |
                                                                              (compEn3 ? 1&lt;&lt;3 : 0) |
                                                                              (compEn4 ? 1&lt;&lt;4 : 0))}`" visible="`${debug}`" editable="false" desc="" />

    <ParamString id="limitEn" name="limitEn" group="Internal" default="`${toHex((limitEn0 ? 1&lt;&lt;0 : 0) |
                                                                                (limitEn1 ? 1&lt;&lt;1 : 0) |
                                                                                (limitEn2 ? 1&lt;&lt;2 : 0) |
                                                                                (limitEn3 ? 1&lt;&lt;3 : 0) |
                                                                                (limitEn4 ? 1&lt;&lt;4 : 0) |
                                                                                (limitEn5 ? 1&lt;&lt;5 : 0) |
                                                                                (limitEn6 ? 1&lt;&lt;6 : 0) |
                                                                                (limitEn7 ? 1&lt;&lt;7 : 0))}`" visible="`${debug}`" editable="false" desc="" />

    <ParamString id="hppassRsc" name="hppassRsc" group="Internal" default="pass[0]" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="hppassUsed" name="hppassUsed" group="Internal" default="`${isBlockUsed(hppassRsc)}`" visible="`${debug}`" editable="false" desc="" />
  </Parameters>
  <DRCs>
    <DRC type="ERROR" text="HPPASS should be enabled and configured" condition="`${!hppassUsed}`" >
      <FixIt action="ENABLE_BLOCK" target="`${hppassRsc}`" value="hppass-1.0" valid="true" />
    </DRC>
    <DRC type="ERROR" text="CSG Slice $idx Comparator should be enabled and configured" condition="`${compEn$idx &amp;&amp; (!isBlockUsed(compRsc$idx))}`" repeatCount="5" >
      <FixIt action="ENABLE_BLOCK" target="`${compRsc$idx}`" value="hppass_csg_slice-1.0" valid="true" />
    </DRC>
    <DRC type="ERROR" text="SAR Limit $idx should be enabled and configured" condition="`${limitEn$idx &amp;&amp; (!isBlockUsed(limitRsc$idx))}`" repeatCount="5" >
      <FixIt action="ENABLE_BLOCK" target="`${limitRsc$idx}`" value="hppass_sar_limit-1.0" valid="true" />
    </DRC>
  </DRCs>
  <ConfigFirmware>
    <ConfigDefine name="`${INST_NAME}`_IDX" value="`${inst}`U" public="true" include="true" />
  </ConfigFirmware>
</PersonalityTemplate>
