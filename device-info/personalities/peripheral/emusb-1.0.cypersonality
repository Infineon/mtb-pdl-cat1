<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file emusb.cypersonality
* \version 1.0
*
* \brief
* emusb personality description file.
*
********************************************************************************
* \copyright
* Copyright 2022 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<Personality id="mxs40emusb" name="emUSB-Host/Device" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v7">
  <Dependencies>
    <IpBlock name="mxusbfs" />
    <Resource name="usb" />
  </Dependencies>
  <ExposedMembers />
  <Parameters>

    <!-- Debug mode selection -->
    <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="Enable/Disable debug mode" />

    <!-- Mode selection -->
    <ParamChoice id="mode" name="USB mode" group="General" default="Host" visible="true" editable="true" desc="Select USB Mode">
      <Entry name="Host" value="Host" visible="true" />
      <Entry name="Device" value="Device" visible="true" />
    </ParamChoice>
    <ParamBool id="modeIsDevice" name="modeIsDevice" group="Internal" default="`${mode eq Device}`" visible="false" editable="false" desc="USB mode is Device" />
    <ParamBool id="modeIsHost" name="modeIsHost" group="Internal" default="`${mode eq Host}`" visible="false" editable="false" desc="USB Mode is Host" />

    <!-- Documentation -->
    <ParamDoc id="emUsbDoc" name="Configuration Help" group="Overview" default="`${modeIsHost ? &quot;https://infineon.github.io/emusb-host/api_reference_manual/html/index.html&quot; : &quot;https://infineon.github.io/emusb-device/api_reference_manual/html/index.html&quot;}`" linkText="`${modeIsHost ? &quot;Open emUSB-Host Documentation&quot; : &quot;Open emUSB-Device Documentation&quot;}`" visible="true" desc="Open the USB Documentation" />

    <!-- USB Hf clock configuration -->
    <ParamSignal port="clk_usb_host[0]" name="Clock" group="Connections" visible="`${modeIsHost}`" desc="The clock to operate this block" canBeEmpty="`${modeIsDevice}`" />
    <ParamSignal port="clk_usb_dev[0]" name="Clock" group="Connections" visible="`${modeIsDevice}`" desc="The clock to operate this block" canBeEmpty="`${modeIsHost}`" />

    <ParamString id="usbHfSource" name="usbHfSource" group="Internal" default="`${modeIsHost ? getBlockFromSignal(&quot;clk_usb_host[0]&quot;) : getBlockFromSignal(&quot;clk_usb_dev[0]&quot;)}`" visible="false" editable="false" desc="Select Hf clock source" />
    <ParamRange  id="usbHfHz" name="usbHfHz" group="Internal" default="`${getExposedMember(usbHfSource, &quot;frequency&quot;)}`" min="0" max="200000000" resolution="1" visible="false" editable="false" desc="USB HF clock frequency in Hz." />

    <ParamRange  id="usbHfRealAccuracyPercent" name="usbHfRealAccuracy" group="Internal" default="`${getExposedMember(usbHfSource, &quot;accuracy&quot;)}`" min="0" max="100" resolution="0.0001" visible="false" editable="false" desc="USB HF clock accuracy." />
    <ParamRange  id="usbHfRealAccuracy" name="usbHfRealAccuracy" group="Internal" default="`${usbHfRealAccuracyPercent / 100}`" min="0" max="100" resolution="0.0001" visible="false" editable="false" desc="USB HF clock accuracy." />
    <ParamRange  id="usbHfRealAccuracyUp" name="usbHfRealAccuracyUp" group="Internal" default="`${usbHfHz + (usbHfHz * usbHfRealAccuracy)}`" min="0" max="200000000" resolution="0.0001" visible="false" editable="false" desc="USB HF clock accuracy." />
    <ParamRange  id="usbHfRealAccuracyLower" name="usbHfRealAccuracyLower" group="Internal" default="`${usbHfHz - (usbHfHz * usbHfRealAccuracy)}`" min="0" max="200000000" resolution="0.0001" visible="false" editable="false" desc="USB HF clock accuracy." />

    <ParamRange id="usbHfAccuracy" name="usbHfClockAccuracy" group="Internal" default="`${modeIsHost ? 0.0005 : 0.0025}`" min="0" max="100" resolution="0.0001" visible="false" editable="false" desc="Hf Clock accuracy, the accuracy is in percent" />
    <ParamRange id="usbHfAccuracyUp" name="usbHfClockAccuracyUp" group="Internal" default="`${48000000 + (48000000 * usbHfAccuracy)}`" min="0" max="200000000" resolution="1" visible="false" editable="false" desc="Hf Clock accuracy, the accuracy is in percent" />
    <ParamRange id="usbHfAccuracyLower" name="usbHfClockAccuracyLower" group="Internal" default="`${48000000 - (48000000 * usbHfAccuracy)}`" min="0" max="200000000" resolution="1" visible="false" editable="false" desc="Hf Clock accuracy, the accuracy is in percent" />

    <ParamString id="usbHfClockFreq" name="Clock real frequency" group="Connections" default="`${usbHfHz . &quot;Hz +/-&quot; . usbHfRealAccuracy * 100 . &quot;%&quot;}`" visible="`${debug}`" editable="false" desc="Real frequency of the connected clock" />

    <!-- USB Reset clock configuration, only for Device -->
    <ParamBool id="checkPeri" name="Check periclk" group="Internal" default="`${hasExposedMember(&quot;srss[0].clock[0].periclk[0]&quot;, &quot;frequency&quot;)}`" visible="false" editable="false" desc="Check if peri clk could be used." />
    <ParamRange  id="clkPeriHz" name="clkPeriHz" group="Internal" default="`${checkPeri ? getExposedMember(&quot;srss[0].clock[0].periclk[0]&quot;, &quot;frequency&quot;) : 0}`" min="0" max="400000000" resolution="1" visible="false" editable="false" desc="Clk_Peri frequency." />
    <ParamRange  id="clkPeriAccuracyPercent" name="clkPeriAccuracyPercent" group="Internal" default="`${checkPeri ? getExposedMember(&quot;srss[0].clock[0].periclk[0]&quot;, &quot;accuracy&quot;) : 0}`" min="0" max="100" resolution="0.0001" visible="false" editable="false" desc="Clk_Peri accuracy." />
    <ParamRange  id="clkPeriAccuracy" name="clkPeriAccuracy" group="Internal" default="`${checkPeri ? clkPeriAccuracyPercent / 100 : 0}`" min="0" max="100" resolution="0.0001" visible="false" editable="false" desc="Clk_Peri accuracy." />

    <ParamString id="emusb_solver" name="emusb_solver" group="Internal" default="`${runTcl(&quot;emusb_solver-1.0.tcl&quot;, clkPeriHz, clkPeriAccuracy)}`" visible="`${debug}`" editable="false" desc="Calculate the range of divider value" />
    <ParamRange id="divCalcResult" name="divCalcResult" group="Internal" default="`${modeIsDevice ? getTclVar(&quot;result&quot;, emusb_solver) : 0}`" min="0" max="2" resolution="1" visible="`${debug}`" editable="false" desc="Returned result" />
    <ParamRange id="divUpperLimit" name="divUpperLimit" group="Internal" default="`${modeIsDevice ? getTclVar(&quot;upperDiv&quot;, emusb_solver) : 1}`" min="0" max="16777215" resolution="1" visible="`${debug}`" editable="false" desc="This parameter defines the maximum allowable divider value" />
    <ParamRange id="divLowerLimit" name="divLowerLimit" group="Internal" default="`${modeIsDevice ? getTclVar(&quot;lowerDiv&quot;, emusb_solver) : 1}`" min="0" max="16777215" resolution="1" visible="`${debug}`" editable="false" desc="This parameter defines the minimum allowable divider value" />
    <ParamRange id="divBestVal" name="divBestVal" group="Internal" default="`${modeIsDevice ? getTclVar(&quot;bestDiv&quot;, emusb_solver) : 1}`" min="0" max="16777215" resolution="1" visible="`${debug}`" editable="false" desc="This parameter defines the minimum allowable divider value" />

    <ParamBool id="usbRstDiv8" name="usbRstDiv8" group="Internal" default="`${modeIsDevice ? (divLowerLimit &lt;= pow(2, 8)) : 0}`" visible="false" editable="false" desc="Checks whether 8-bit divider can be used for USBFS bus reset detection." />

    <ParamSignal port="clock_dev_brs[0]" name="Clock (Bus Reset)" group="Connections" visible="`${modeIsDevice}`" desc="The clock used to detect the USB Reset condition." canBeEmpty="`${modeIsHost}`" >

      <Constraint type="ACCEPT" targetLocation="peri\[\d+\]\.div_8.*" valid="`${usbRstDiv8}`" >
        <Parameter id="intDivider" severity="ERROR" reason="Clock frequency does not match desired 100 kHz.">
          <Range min="`${divLowerLimit}`" max="`${divUpperLimit}`" preferred="`${divBestVal}`" />
        </Parameter>
      </Constraint>

      <Constraint type="ACCEPT" targetLocation="peri\[\d+\]\.div_(16|16.5|24.5).*" valid="true" >
        <Parameter id="intDivider" severity="ERROR" reason="Clock frequency does not match desired 100 kHz.">
          <Range min="`${divLowerLimit}`" max="`${divUpperLimit}`" preferred="`${divBestVal}`" />
        </Parameter>
      </Constraint>

      <Constraint type="ACCEPT" targetLocation="peri\[\d+\]\.div_(16.5|24.5).*" valid="true" >
        <Parameter id="fracDivider" severity="ERROR" reason="Fractional divider must be 0.">
          <Fixed value= "0" />
        </Parameter>
      </Constraint>
    </ParamSignal>

    <ParamString id="usbDivSource" name="usbDivSource" group="Internal" default="`${modeIsDevice ? getBlockFromSignal(&quot;clock_dev_brs[0]&quot;) : 0}`" visible="false" editable="false" desc="Source divider of Clock (Bus Reset)" />
    <ParamBool id="usbDivOk" name="usbDivOk" group="Internal" default="`${hasConnection(&quot;clock_dev_brs&quot;, 0) &amp;&amp; isBlockUsed(usbDivSource)}`" visible="false" editable="false" desc="Checks whether there is a divider connected and enabled." />
    <ParamString id="usbDivDst" name="usbDivDst" group="Internal" default="PCLK_USB_CLOCK_DEV_BRS" visible="false" editable="false" desc="Generates divider connection define." />
    <ParamRange id="checkDivFreq" name="Check periclk" group="Internal" default="`${modeIsDevice ? getExposedMember(usbDivSource, &quot;frequency&quot;) : 0}`" min="0" max="400000000" resolution="1" visible="false" editable="false" desc="Divider value for Clock (Bus Reset)" />
    <ParamRange id="checkDivAccur" name="Check periclk" group="Internal" default="`${modeIsDevice ? getExposedMember(usbDivSource, &quot;accuracy&quot;) : 0}`" min="0" max="100" resolution="0.01" visible="false" editable="false" desc="Divider accuracy of Clock (Bus Reset)" />
  
    <ParamString id="usbRstClkFreq" name="Clock (Bus Reset) real frequency" group="Connections" default="`${checkDivFreq . &quot;Hz +/-&quot; . checkDivAccur . &quot;%&quot;}`" visible="`${debug &amp;&amp; modeIsDevice}`" editable="false" desc="Real frequency of the connected clock" />

    <!-- Pins configuration -->
    <ParamSignal port="usb_dp_pad[0]" name="D+" group="Connections" visible="true" desc="USB Data plus signal (USBDP)."  canBeEmpty="false" />
    <ParamSignal port="usb_dm_pad[0]" name="D-" group="Connections" visible="true" desc="USB Data minus signal (USBDM)." canBeEmpty="false" />

  </Parameters>

  <DRCs>
    <DRC type="WARNING" text="`${&quot;CLK_HF3 does not meet the requirements. The frequency must be in the range 48 MHz -/+ &quot; . usbHfAccuracy * 100 . &quot; % or the maximum deviation in the range &quot; . usbHfAccuracyLower . &quot;-&quot; . usbHfAccuracyUp . &quot;] Hz&quot;}`" condition="`${(usbHfRealAccuracyUp &gt; usbHfAccuracyUp) || (usbHfRealAccuracyLower &lt; usbHfAccuracyLower)}`" location="`${usbHfSource}`" paramId="frequencyInfo">
    </DRC>
    <DRC type="ERROR" text="Clock (Bus Reset) does not meet the requirements. The clock accuracy be +/- 0.25 %." condition="`${divCalcResult eq 2}`" paramId="frequencyInfo">
    </DRC>
    <DRC type="ERROR" text="Clock (Bus Reset) does not meet the requirements. This frequency cannot be generated in the required range [99750-100250] Hz" condition="`${divCalcResult eq 1}`" paramId="frequencyInfo">
    </DRC>
  </DRCs>

  <ConfigFirmware>
    <ConfigInclude value="cy_sysclk.h" include="`${usbDivOk}`" />
    <ConfigInclude value="cyhal_hwmgr.h" include="true" guard="defined (CY_USING_HAL)" />

    <ConfigStruct name="`${INST_NAME}`_obj" type="cyhal_resource_inst_t" const="true" public="true" include="true" guard="defined (CY_USING_HAL)">
      <Member name="type" value="CYHAL_RSC_USB" />
      <Member name="block_num" value="`${getInstNumber(&quot;usb&quot;)}`U" />
      <Member name="channel_num" value="0U" />
    </ConfigStruct>
    <ConfigInstruction value="cyhal_hwmgr_reserve(&amp;`${INST_NAME}`_obj);" include="true" guard="defined (CY_USING_HAL)" />

    <ConfigInstruction value="Cy_SysClk_PeriphAssignDivider(`${usbDivDst}`, `${getExposedMember(usbDivSource, &quot;clockSel&quot;)}`);" include="`${usbDivOk}`"  />

  </ConfigFirmware>

</Personality>
