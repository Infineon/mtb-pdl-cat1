<?xml version="1.0" encoding="utf-8"?>


<!--****************************************************************************
* \file sar2.cypersonality
* \version 1.0
*
* \brief
* SAR2 personality description file.
*
********************************************************************************
* \copyright
* Copyright 2022 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->
<Personality id="sar" name="SAR2" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v7">
  <Dependencies>
    <IpBlock name="mxs40epass" />
    <Resource name="pass\.saradc\.sar" />
  </Dependencies>
  <ExposedMembers>
    <ExposedMember key="sourceClockRsc" paramId="sourceClockRsc" />
  </ExposedMembers>
  <Parameters>
  <!-- PDL documentation -->
    <ParamDoc id="pdlDoc" name="Configuration Help" group="Overview" default="file:///`${cy_libs_path()}`/docs/pdl_api_reference_manual/html/group__group__sar2.html" linkText="Open SAR2 Documentation" visible="true" desc="Opens the Peripheral Driver Library Documentation" />

    <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
    <ParamString id="InstNumber" name="InstNumber" group="Internal" default="`${getInstNumber(&quot;saradc&quot;)}`" visible="`${debug}`" editable="false" desc="SARADC Instance name number." />

    <ParamBool id="isPowerEnabled" name="Is Power Enabled" group="Internal" default="`${isBlockUsed(&quot;srss[0].power[0]&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="vdda" name="vdda" group="Internal" default="`${isPowerEnabled ? getExposedMember(&quot;srss[0].power[0]&quot;, &quot;vddaMv&quot;) / 1000.0 : 3.6}`" min="0" max="10" resolution="0.001" visible="`${debug}`" editable="false" desc="" />
    
    <ParamChoice id="VDDAsel" name="VDDA Range" group="General" default="`${(vdda &gt; 4.5) ? VDDA_VOLTAGE_4_5V_TO_5_5V : VDDA_VOLTAGE_2_7V_TO_4_5V}`" visible="false" editable="false" desc="VDDA range">
      <Entry name="Range 4,5V-5,5V" value="VDDA_VOLTAGE_4_5V_TO_5_5V" visible="true" />
      <Entry name="Range 2,7V-4,5V" value="VDDA_VOLTAGE_2_7V_TO_4_5V" visible="true" />
    </ParamChoice>

    <ParamBool id="sarIpEnable" name="Enable SAR Block" group="General" default="false" visible="true" editable="true" desc="Enable the SAR block." />
    <ParamBool id="sarMuxEnable" name="Enable The SAR MUX" group="General" default="true" visible="true" editable="true" desc="Enable the SAR MUX." />
    <ParamBool id="adcEnable" name="Enable The SAR ADC" group="General" default="true" visible="true" editable="true" desc="Enable the SAR ADC." />
    <ParamRange id="preconditionTime" name="Precondition Time" group="General" default="0" min="0" max="7" resolution="1" visible="true" editable="true" desc="Number ADC clock cycles that Preconditioning is done before the sample window starts." />
    <ParamRange id="powerupTime" name="Power Up Time" group="General" default="0" min="0" max="255" resolution="1" visible="true" editable="true" desc="Number ADC clock cycles to wait to power up after IDLE_PWRDWN." />
    <ParamBool id="enableIdlePowerDown" name="Power Down If Idle" group="General" default="false" visible="true" editable="true" desc="When idle automatically power down the analog if true." />
    <ParamChoice id="msbStretch" name="MSB Cycles" group="General" default="CY_SAR2_MSB_STRETCH_MODE_1CYCLE" visible="true" editable="true" desc="When set use 2 cycles for the Most Significant Bit (MSB)." >
      <Entry name="Use 1 clock cycles per conversion" value="CY_SAR2_MSB_STRETCH_MODE_1CYCLE" visible="true" />
      <Entry name="Use 2 clock cycles per conversion" value="CY_SAR2_MSB_STRETCH_MODE_2CYCLE" visible="true" />
    </ParamChoice>
    <ParamBool id="enableHalfLsbConv" name="Half LSB" group="General" default="false" visible="true" editable="true" desc="When true take an extra cycle to convert the half LSB and add it to 12-bit result for Missing Code Recovery." />
    <ParamRange id="channelNum" name="Number Of Channels" group="General" default="1" min="1" max="`${lookupExpression(&quot;SAR_SLICE_NR[&quot; . InstNumber . &quot;].SAR.SAR_CHAN_NR&quot;)}`" resolution="1" visible="true" editable="true" desc="Number SAR2 ADC channels." />

    <ParamSignal name="Clock" port="clock_sar[0]" group="Connections" visible="true" desc="Clock that operates this block" canBeEmpty="false">
    </ParamSignal>
    <ParamString id="sourceClockRsc" name="Source Clock Resource" group="Connections" default="`${getBlockFromSignal(&quot;clock_sar[0]&quot;)}`" visible="`${debug}`" editable="false" desc="Source Clock Resource" />
    <ParamBool id="isHFClkEnabled" name="Is Power Enabled" group="Connections" default="`${isBlockUsed(&quot;srss[0].clock[0].hfclk[0]&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="sourceClock" name="Source Clock Resource" group="Connections" default="`${getBlockFromSignal(&quot;clock_sar[0]&quot;)}`" visible="false" editable="false" desc="Source Clock Resource" />

    <ParamString id="clkFreqMinHz" name="clkFreqMinHz" group="Connections" default="1000000" visible="false" editable="false" desc="Minimum supported ADC clock frequency" />
    <ParamString id="clkFreqMaxHz" name="clkFreqMaxHz" group="Connections" default="`${VDDAsel eq VDDA_VOLTAGE_4_5V_TO_5_5V ? 26670000 : 13340000}`" visible="false" editable="false" desc="Maximum supported ADC clock frequency" />
    <ParamString id="clkFreqMinMHz" name="clkFreqMin" group="Connections" default="1" visible="false" editable="false" desc="Minimum supported ADC clock frequency" />
    <ParamString id="clkFreqMaxMHz" name="clkFreqMax" group="Connections" default="`${VDDAsel eq VDDA_VOLTAGE_4_5V_TO_5_5V ? 27 : 13}`" visible="false" editable="false" desc="Maximum supported ADC clock frequency" />
    <ParamRange id="adcClkFreqHz" name="SAR2 Clock Frequency, HZ" group="Connections" default="`${(sourceClock ne &quot;&quot;) ? getExposedMember(sourceClock, &quot;frequency&quot;) : 1}`" min="0" max="400000000" resolution="1" visible="false" editable="false" desc="" />
    <ParamString id="clk_freq_display" name="Clock Frequency" group="Connections" default="`${adcClkFreqHz &lt; 1000000 ? adcClkFreqHz / 1000.0 . &quot; kHz&quot; : adcClkFreqHz / 1000000. . &quot; MHz&quot;}`" visible="true" editable="false" desc="Frequency of the connected clock" />

    <ParamRange id="hfClkFreqHz" name="sourceFrequency" group="Connections" default="`${isHFClkEnabled ? getExposedMember(&quot;srss[0].clock[0].hfclk[1]&quot;, &quot;frequency&quot;) : 1}`" min="0" max="400000000" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="pclk" name="pclk" group="Connections" default="`${getBlockFromSignal(&quot;clock_sar[0]&quot;)}`" visible="false" editable="false" desc="" />
    <ParamBool id="pclkOk" name="pclkOk" group="Connections" default="`${hasConnection(&quot;clock_sar&quot;, 0) &amp;&amp; isBlockUsed(pclk)}`" visible="`${debug}`" editable="false" desc="" />

    <Repeat count="32">
        <ParamBool id="ch$idx_en" name="Enable" group="Channel $idx" default="`${channelNum &gt; $idx}`" visible="`${debug}`" editable="false" desc="Include Channel $idx in scan"/>
    </Repeat>

    <Repeat count="32">
        <ParamBool id="ch$idx_isHWenabled" name="Enabled" group="Channel $idx" default="false" visible="`${ch$idx_en}`" editable="true" desc="If HW is started, in scope of _Init() function, or just configured." />
        <ParamChoice id="ch$idx_triggerSelection" name="HW Trigger" group="Channel $idx" default="CY_SAR2_TRIGGER_OFF" visible="`${ch$idx_en}`" editable="true" desc="The ADC trigger mode selection." >
            <Entry name="Disabled" value="CY_SAR2_TRIGGER_OFF" visible="true" />
            <Entry name="TCPWM" value="CY_SAR2_TRIGGER_TCPWM" visible="true" />
            <Entry name="Generic 0" value="CY_SAR2_TRIGGER_GENERIC0" visible="true" />
            <Entry name="Generic 1" value="CY_SAR2_TRIGGER_GENERIC1" visible="true" />
            <Entry name="Generic 2" value="CY_SAR2_TRIGGER_GENERIC2" visible="true" />
            <Entry name="Generic 3" value="CY_SAR2_TRIGGER_GENERIC3" visible="true" />
            <Entry name="Continuous" value="CY_SAR2_TRIGGER_CONTINUOUS" visible="true" />
        </ParamChoice>
        <ParamSignal name="Trigger Input" port="tr_sar_gen_in[$idx]" group="Channel $idx" visible="`${ch$idx_en}`" desc="Trigger Input" canBeEmpty="true">
        </ParamSignal>
        <ParamSignal name="Trigger Output" port="tr_sar_gen_out[$idx]" group="Channel $idx" visible="`${ch$idx_en}`" desc="Trigger Output" canBeEmpty="true">
        </ParamSignal>
        <ParamSignal name="Trigger Chanel Input" port="tr_sar_ch_in[$idx]" group="Channel $idx" visible="`${ch$idx_en}`" desc="Trigger Chanel Input" canBeEmpty="true">
        </ParamSignal>
        <ParamSignal name="Voltage Range Trigger Output" port="tr_sar_ch_rangevio[$idx]" group="Channel $idx" visible="`${ch$idx_en}`" desc="Voltage Range Trigger Output" canBeEmpty="true">
        </ParamSignal>
        <ParamSignal name="Channel Done Trigger Output" port="tr_sar_ch_done[$idx]" group="Channel $idx" visible="`${ch$idx_en}`" desc="Channel Done Trigger Output" canBeEmpty="true">
        </ParamSignal>
        <ParamSignal name="Debug Freeze Input" port="tr_debug_freeze[$idx]" group="Channel $idx" visible="`${ch$idx_en}`" desc="Debug Freeze Input" canBeEmpty="true">
        </ParamSignal>
        <ParamRange id="ch$idx_channelPriority" name="Priority" group="Channel $idx" default="0" min="0" max="7" resolution="1" visible="`${ch$idx_en}`" editable="true" desc="Channel priority. 0=highest, 7=lowest."/>
        <ParamChoice id="ch$idx_preenptionType" name="Preemption Type" group="Channel $idx" default="CY_SAR2_PREEMPTION_ABORT_CANCEL" visible="`${ch$idx_en}`" editable="true" desc="The ADC preemption type selection." >
            <Entry name="Abort ongoing acquisition, do not return" value="CY_SAR2_PREEMPTION_ABORT_CANCEL" visible="true" />
            <Entry name="Abort ongoing acquisition, up on return Restart" value="CY_SAR2_PREEMPTION_ABORT_RESTART" visible="true" />
            <Entry name="Abort ongoing acquisition, up on return Resume" value="CY_SAR2_PREEMPTION_ABORT_RESUME" visible="true" />
            <Entry name="Complete ongoing acquisition (including averaging), up on return Resume" value="CY_SAR2_PREEMPTION_FINISH_RESUME" visible="true" />
        </ParamChoice>
        <ParamBool id="ch$idx_isGroupEnd" name="Group End" group="Channel $idx" default="false" visible="`${ch$idx_en}`" editable="true" desc="This value indicates that this channel is the last in the group." />
        <ParamChoice id="ch$idx_doneLevel" name="Output Trigger Type" group="Channel $idx" default="CY_SAR2_DONE_LEVEL_PULSE" visible="`${ch$idx_en}`" editable="true" desc="Conversion done trigger output selection." >
            <Entry name="Pulse" value="CY_SAR2_DONE_LEVEL_PULSE" visible="true" />
            <Entry name="Level" value="CY_SAR2_DONE_LEVEL_LEVEL" visible="true" />
        </ParamChoice>
        <ParamSignal name="Input" port="vin[$idx]" group="Channel $idx" multiSelect="true" visible="`${ch$idx_en}`" canBeEmpty="false" desc="Channel Input Voltage" />
        <ParamBool id="ch$idx_extMuxEnable" name="Enable External Analog Mux" group="Channel $idx" default="false" visible="`${ch$idx_en}`" editable="true" desc="External analog mux enable." />
        <ParamChoice id="ch$idx_extMuxSelect" name="External Analog Mux Select" group="Channel $idx" default="0" visible="`${ch$idx_en &amp;&amp; ch$idx_extMuxEnable}`" editable="`${ch$idx_extMuxEnable}`" desc="External analog mux select." >
            <Entry name="EXT_MUX[x]_0" value="0" visible="true" />
            <Entry name="EXT_MUX[x]_1" value="1" visible="true" />
        </ParamChoice>
        <ParamChoice id="ch$idx_preconditionMode" name="Precondition Mode" group="Channel $idx" default="CY_SAR2_PRECONDITION_MODE_OFF" visible="`${ch$idx_en}`" editable="true" desc="Select preconditioning mode." >
            <Entry name="No Preconditioning" value="CY_SAR2_PRECONDITION_MODE_OFF" visible="true" />
            <Entry name="Discharge to VREFL" value="CY_SAR2_PRECONDITION_MODE_VREFL" visible="true" />
            <Entry name="Charge to VREFH" value="CY_SAR2_PRECONDITION_MODE_VREFH" visible="true" />
            <Entry name="Connect the Diagnostic Reference" value="CY_SAR2_PRECONDITION_MODE_DIAG" visible="true" />
        </ParamChoice>
        <ParamChoice id="ch$idx_overlapDiagMode" name="Overlap Diagnostic Mode" group="Channel $idx" default="CY_SAR2_OVERLAP_DIAG_MODE_OFF" visible="`${ch$idx_en}`" editable="true" desc="Select Overlap mode or SARMUX Diagnostics." >
            <Entry name="No Overlap or SARMUX Diagnostics" value="CY_SAR2_OVERLAP_DIAG_MODE_OFF" visible="true" />
            <Entry name="2 Sample Time Periods" value="CY_SAR2_OVERLAP_DIAG_MODE_HALF" visible="true" />
            <Entry name="Normal Sample Time" value="CY_SAR2_OVERLAP_DIAG_MODE_FULL" visible="true" />
            <Entry name="Diagnostic Reference" value="CY_SAR2_OVERLAP_DIAG_MODE_MUX_DIAG" visible="true" />
        </ParamChoice>
        <ParamRange id="ch$idx_sampleTime" name="Sample Time (Aperture)" group="Channel $idx" default="6" min="`${ceil((adcClkFreqHz * (VDDAsel eq VDDA_VOLTAGE_4_5V_TO_5_5V ? 412 : 600 )) / 1000000000.0)}`" max="4095" resolution="1" visible="`${ch$idx_en}`" editable="true" desc="Sample time (aperture) in ADC clock cycles." />
        <ParamChoice id="ch$idx_calibrationValueSelect" name="Selection Of Calibration Values" group="Channel $idx" default="CY_SAR2_CALIBRATION_VALUE_REGULAR" visible="`${ch$idx_en}`" editable="true" desc="Select calibration values." >
            <Entry name="Regular" value="CY_SAR2_CALIBRATION_VALUE_REGULAR" visible="true" />
            <Entry name="Alternate" value="CY_SAR2_CALIBRATION_VALUE_ALTERNATE" visible="true" />
        </ParamChoice>
        <ParamChoice id="ch$idx_resultAlignment" name="Result Data Alignment" group="Channel $idx" default="CY_SAR2_RESULT_ALIGNMENT_RIGHT" visible="`${ch$idx_en}`" editable="true" desc="Select result data alignment." >
            <Entry name="The data is right aligned in Result[11:0]" value="CY_SAR2_RESULT_ALIGNMENT_RIGHT" visible="true" />
            <Entry name="The data is left aligned in Result[15:4]" value="CY_SAR2_RESULT_ALIGNMENT_LEFT" visible="true" />
        </ParamChoice>
        <ParamChoice id="ch$idx_signExtention" name="Sign Extension" group="Channel $idx" default="CY_SAR2_SIGN_EXTENTION_UNSIGNED" visible="`${ch$idx_en}`" editable="true" desc="Select whether result data is signed or unsigned." >
            <Entry name="Unsigned" value="CY_SAR2_SIGN_EXTENTION_UNSIGNED" visible="true" />
            <Entry name="Signed" value="CY_SAR2_SIGN_EXTENTION_SIGNED" visible="true" />
        </ParamChoice>
        <ParamChoice id="ch$idx_postProcessingMode" name="Post Processing Mode" group="Channel $idx" default="CY_SAR2_POST_PROCESSING_MODE_NONE" visible="`${ch$idx_en}`" editable="true" desc="Select post processing mode." >
            <Entry name="No Post Processing" value="CY_SAR2_POST_PROCESSING_MODE_NONE" visible="true" />
            <Entry name="Averaging" value="CY_SAR2_POST_PROCESSING_MODE_AVG" visible="true" />
            <Entry name="Averaging + Range Detect" value="CY_SAR2_POST_PROCESSING_MODE_AVG_RANGE" visible="true" />
            <Entry name="Range Detect" value="CY_SAR2_POST_PROCESSING_MODE_RANGE" visible="true" />
            <Entry name="Range Detect + Pulse Detect" value="CY_SAR2_POST_PROCESSING_MODE_RANGE_PULSE" visible="true" />
        </ParamChoice>
        <ParamRange id="ch$idx_averageCount" name="Averaging Count" group="Channel $idx" default="1" min="1" max="256" resolution="1" visible="`${ch$idx_en}`" editable="`${((ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_AVG) || (ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_AVG_RANGE))}`" desc="Averaging count. Available if Post Processing Mode Averaging is selected. Otherwise - ignored." />
        <ParamRange id="ch$idx_rightShift" name="Shift Right" group="Channel $idx" default="0" min="0" max="15" resolution="1" visible="`${ch$idx_en}`" editable="`${((ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_AVG) || (ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_AVG_RANGE) || (ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_NONE))}`" desc="Shift Right. Available if Post Processing Mode Averaging or None is selected. Otherwise - ignored." />
        <ParamRange id="ch$idx_positiveReload" name="Positive Reload" group="Channel $idx" default="0" min="0" max="255" resolution="1" visible="`${ch$idx_en}`" editable="`${(ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_RANGE_PULSE)}`" desc="Positive reload value. Available if Post Processing Mode Pulse Detect is selected. Otherwise - ignored." />
        <ParamRange id="ch$idx_negativeReload" name="Negative Reload" group="Channel $idx" default="0" min="0" max="31" resolution="1" visible="`${ch$idx_en}`" editable="`${(ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_RANGE_PULSE)}`" desc="Negative reload value. Available if Post Processing Mode Pulse Detect is selected. Otherwise - ignored." />
        <ParamChoice id="ch$idx_rangeDetectionMode" name="Range Detection Mode" group="Channel $idx" default="CY_SAR2_RANGE_DETECTION_MODE_BELOW_LO" visible="`${ch$idx_en}`" editable="true" desc="Select range detection mode." >
            <Entry name="Below Low Threshold (Result &lt; Low)" value="CY_SAR2_RANGE_DETECTION_MODE_BELOW_LO" visible="true" />
            <Entry name="Inside Range (Low &lt;= Result &lt; High)" value="CY_SAR2_RANGE_DETECTION_MODE_INSIDE_RANGE" visible="true" />
            <Entry name="Above High Threshold (High &lt;= Result)" value="CY_SAR2_RANGE_DETECTION_MODE_ABOVE_HI" visible="true" />
            <Entry name="Outside Range (Result &lt; Low || High &lt;= Result)" value="CY_SAR2_RANGE_DETECTION_MODE_OUTSIDE_RANGE" visible="true" />
        </ParamChoice>
        <ParamRange id="ch$idx_rangeDetectionLoThreshold" name="Range Detect Low Threshold" group="Channel $idx" default="0" min="0" max="65535" resolution="1" visible="`${ch$idx_en}`" editable="true" desc="Range detection Low threshold." />
        <ParamRange id="ch$idx_rangeDetectionHiThreshold" name="Range Detect High Threshold" group="Channel $idx" default="65535" min="0" max="65535" resolution="1" visible="`${ch$idx_en}`" editable="true" desc="Range detection High threshold." />
        <ParamString id="pclkDst" name="PCLK Destination" group="Internal" default="PCLK_PASS0_CLOCK_SAR`${InstNumber}`" visible="false" editable="false" desc="Generates PCLK connection define." />
    </Repeat>

    <ParamBool id="inFlash" name="Store Config in Flash" group="Advanced" default="true" visible="true" editable="true" desc="Controls whether the configuration structure is stored in flash (const, true) or SRAM (not const, false)." />
  </Parameters>
  <DRCs>
      <DRC type="ERROR" text="SAR2 clock frequency, `${adcClkFreqHz &lt; 1000000 ? adcClkFreqHz / 1000.0 . &quot; kHz&quot; : adcClkFreqHz / 1000000. . &quot; MHz&quot;}`, is out of the supported range (`${clkFreqMinMHz}` to `${clkFreqMaxMHz}` MHz). Change clock frequency or VDDA voltage." condition="`${(sourceClock ne &quot;&quot;) &amp;&amp; ((adcClkFreqHz &gt; (clkFreqMaxHz)) || (adcClkFreqHz &lt; (clkFreqMinHz)))}`" paramId="clk_freq_display"/>
      <DRC type="ERROR" text="Power personality has to be enabled in order to configure and use SAR2 driver." condition="`${!isPowerEnabled}`" paramId="isPowerEnabled"/>
  </DRCs>
  <ConfigFirmware>
      <ConfigInclude value="cy_sar2.h" include="true" />
      <ConfigInclude value="cy_sysclk.h" include="`${pclkOk}`" />
      <ConfigInclude value="cycfg_routing.h" include="true" />

      <ConfigDefine name="`${INST_NAME}`_HW" value="PASS0_SAR`${InstNumber}`" public="true" include="true" />

      <ConfigDefine name="`${INST_NAME}`_CH$idx_HW" value="PASS0_SAR`${InstNumber}`_CH$idx" public="true" include="`${(channelNum &gt; $idx)}`" repeatCount="32" />

      <ConfigDefine name="`${INST_NAME}`_CH$idx_IRQ" value="pass_0_interrupts_sar_`${((32 * InstNumber) + $idx)}`_IRQn" public="true" include="`${(channelNum &gt; $idx)}`" repeatCount="32" />

      <ConfigDefine name="`${INST_NAME}`_VDDA_RANGE" value="`${(vdda &gt; 4.5) ? &quot;CY_SAR2_VDDA_4_5V_TO_5_5V&quot; : &quot;CY_SAR2_VDDA_2_7V_TO_4_5V&quot;}`" public="true" include="true" />

      <!-- The fitter only generates PORT_ADDR when the signal passes through an expansion mux. Other signals such as amuxbus or vmotor will not generate PORT_ADDR so define default here -->
      <ConfigDefine name="SARMUX0_CH$idx_PORT_ADDR" value="0" public="false" include="`${(InstNumber == 0) &amp;&amp; (channelNum &gt; $idx)}`" repeatCount="32" preventOverride="true" />

      <ConfigStruct name="`${INST_NAME}`_channel_$idx_config" type="cy_stc_sar2_channel_config_t" const="`${inFlash}`" public="true" include="`${(channelNum &gt; $idx)}`" repeatCount="32" >
        <Member name="channelHwEnable" value="`${ch$idx_isHWenabled}`" />
        <Member name="triggerSelection" value="`${ch$idx_triggerSelection}`" />
        <Member name="channelPriority" value="`${ch$idx_channelPriority}`U" />
        <Member name="preenptionType" value="`${ch$idx_preenptionType}`" />
        <Member name="doneLevel" value="`${ch$idx_doneLevel}`" />
        <Member name="isGroupEnd" value="`${ch$idx_isGroupEnd}`" />
        <Member name="pinAddress" value="`${hasConnection(&quot;vin&quot;, $idx) ? &quot;SARMUX&quot; . InstNumber . &quot;_CH$idx_PIN_ADDR&quot; : 0}`" />   
        <Member name="portAddress" value="`${InstNumber == 0 &amp;&amp; hasConnection(&quot;vin&quot;, $idx) ? &quot;SARMUX0_CH$idx_PORT_ADDR&quot; : 0}`" />
        <Member name="extMuxEnable" value="`${ch$idx_extMuxEnable}`" />
        <Member name="extMuxSelect" value="`${ch$idx_extMuxSelect}`U" />
        <Member name="preconditionMode" value="`${ch$idx_preconditionMode}`" />
        <Member name="overlapDiagMode" value="`${ch$idx_overlapDiagMode}`" />
        <Member name="sampleTime" value="`${ch$idx_sampleTime}`U" />
        <Member name="calibrationValueSelect" value="`${ch$idx_calibrationValueSelect}`" />
        <Member name="postProcessingMode" value="`${ch$idx_postProcessingMode}`" />
        <Member name="resultAlignment" value="`${ch$idx_resultAlignment}`" />
        <Member name="signExtention" value="`${ch$idx_signExtention}`" />
        <Member name="averageCount" value="`${((ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_AVG) || (ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_AVG_RANGE)) ? ch$idx_averageCount : 1}`U" />
        <Member name="rightShift" value="`${((ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_AVG) || (ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_AVG_RANGE) || (ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_NONE)) ? ch$idx_rightShift : 0}`U" />

        <Member name="positiveReload" value="`${(ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_RANGE_PULSE) ? ch$idx_positiveReload : 0}`U" />
        <Member name="negativeReload" value="`${(ch$idx_postProcessingMode eq CY_SAR2_POST_PROCESSING_MODE_RANGE_PULSE) ? ch$idx_negativeReload : 0}`U" />

        <Member name="rangeDetectionMode" value="`${ch$idx_rangeDetectionMode}`" />
        <Member name="rangeDetectionLoThreshold" value="`${ch$idx_rangeDetectionLoThreshold}`U" />
        <Member name="rangeDetectionHiThreshold" value="`${ch$idx_rangeDetectionHiThreshold}`U" />
      </ConfigStruct>

      <ConfigStruct name="`${INST_NAME}`_config" type="cy_stc_sar2_config_t" const="`${inFlash}`" public="true" include="true">
        <Member name="preconditionTime" value="`${preconditionTime}`U" />
        <Member name="powerupTime" value="`${powerupTime}`U" />
        <Member name="enableIdlePowerDown" value="`${enableIdlePowerDown}`" />
        <Member name="msbStretchMode" value="`${msbStretch}`" />
        <Member name="enableHalfLsbConv" value="`${enableHalfLsbConv}`" />
        <Member name="sarMuxEnable" value="`${sarMuxEnable}`" />
        <Member name="adcEnable" value="`${adcEnable}`" />
        <Member name="sarIpEnable" value="`${sarIpEnable}`" />
        <Member name="channelConfig" value="{`${(ch0_en ? (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_0_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch1_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_1_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch2_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_2_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch3_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_3_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch4_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_4_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch5_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_5_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch6_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_6_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch7_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_7_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch8_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_8_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch9_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_9_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch10_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_10_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch11_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_11_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch12_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_12_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch13_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_13_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch14_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_14_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch15_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_15_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch16_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_16_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch17_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_17_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch18_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_18_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch19_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_19_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch20_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_20_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch21_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_21_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch22_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_22_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch23_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_23_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch24_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_24_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch25_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_25_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch26_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_26_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch27_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_27_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch28_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_28_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch29_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_29_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch30_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_30_config,&#10;&quot; : &quot;NULL, &quot;) .
           (ch31_en ? &quot;                      &quot; . (inFlash ? &quot;(cy_stc_sar2_channel_config_t *)&quot; : &quot;&quot;) . &quot;&amp;&quot; . INST_NAME . &quot;_channel_31_config&quot; : &quot;NULL&quot;)}`}" />
      </ConfigStruct>

    <ConfigInstruction value="Cy_SysClk_PeriphAssignDivider(`${pclkDst}`, `${getExposedMember(pclk, &quot;clockSel&quot;)}`);" include="`${pclkOk}`" />
      
  </ConfigFirmware>
</Personality>