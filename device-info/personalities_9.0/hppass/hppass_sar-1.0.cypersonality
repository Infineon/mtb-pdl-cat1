<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file hppass_sar-1.0.cypersonality
* \version 1.0
*
* \brief
* HPPASS SAR personality description file.
*
********************************************************************************
* \copyright
* (c) (2024), Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
*
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<PersonalityTemplate id="hppass_sar" name="SAR" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v9">
  <FittingRules>
    <MappingRules>
      <IpBlock name="mxs40mcpass" />
      <Resource name="pass\.sar"/>
    </MappingRules>
  </FittingRules>
  <ExposedMembers>
    <ExposedMember key="inFlash" paramId="inFlash" />
    <ExposedMember key="cfgName" paramId="cfgName" />
    <ExposedMember key="instName" paramId="instName" />
    <ExposedMember key="vref" paramId="vref" />
    <ExposedMember key="vRefMv" paramId="vRefMv" />
  </ExposedMembers>
  <Parameters>
    <ParamDoc id="pdlDoc" name="Configuration Help" group="Overview" default="file:///`${cy_libs_path()}`/docs/pdl_api_reference_manual/html/group__group__hppass__sar.html" linkText="Open HPPASS SAR Documentation" visible="true" desc="Opens the Peripheral Driver Library Documentation" />
    <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
    <ParamString id="cfgName" name="cfgName" group="Internal" default="`${INST_NAME}`_config" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="instName" name="instName" group="Internal" default="`${INST_NAME}`" visible="`${debug}`" editable="false" desc="" />
    <ParamChoice id="vref" name="Vref" group="General" default="CY_HPPASS_SAR_VREF_VDDA" visible="true" editable="true" desc="The reference voltage source selection.">
      <Entry name="VDDA"               value="CY_HPPASS_SAR_VREF_VDDA" visible="true" />
      <Entry name="External (VAREF_EXT)" value="CY_HPPASS_SAR_VREF_EXT"  visible="true" />
    </ParamChoice>
    <ParamString id="powerRsc" name="powerRsc" group="Internal" default="srss[0].power[0]" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="powerUsed" name="powerUsed" group="Internal" default="`${isBlockUsed(powerRsc)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="vddaMv" name="vddaMv" group="Internal" default="`${powerUsed ? getExposedMember(powerRsc, &quot;vddaMv&quot;) : 3300}`" min="1700" max="3600" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="vRefMv" name="Vref Voltage (mV)" group="General" default="`${vref eq CY_HPPASS_SAR_VREF_VDDA ? vddaMv : 3300}`" min="1710" max="3600" resolution="1" visible="true" editable="`${vref eq CY_HPPASS_SAR_VREF_EXT}`" desc="The ADC reference voltage" />
    <ParamBool id="lowSupply" name="Low Supply Mode" group="General" default="`${vddaMv &lt; 2700}`" visible="true" editable="false" desc="True when VDDA supply is less than 2.7 V." />
    <ParamChoice id="calibMode" name="Calibration Mode at Startup" group="General" default="0" visible="true" editable="true" desc="Copy the calibration values from SFLASH to SAR registers or run auto calibration process.">
      <Entry name="Factory Calibration" value="0" visible="true" />
      <Entry name="Self Calibration"    value="1" visible="true" />
    </ParamChoice>
    <ParamRange id="temp" name="Factory Calibration Temperature (C)" group="General" default="25" min="-40" max="125" resolution="1" visible="`${calibMode eq 0}`" editable="true" desc="The ADC calibration temperature." />
    <ParamBool id="offsetCalibEn" name="Offset Calibration" group="General/Self Calibration options" default="false" visible="`${calibMode eq 1}`" editable="`${calibMode eq 1}`" desc="Enable the offset calibration during startup." />
    <ParamBool id="linearCalibEn" name="Linearity Calibration" group="General/Self Calibration options" default="false" visible="`${calibMode eq 1}`" editable="`${calibMode eq 1}`" desc="Enable the linearity calibration during startup." />
    <ParamBool id="gainCalibEn" name="Gain Calibration" group="General/Self Calibration options" default="false" visible="`${calibMode eq 1}`" editable="`${calibMode eq 1}`" desc="Enable the gain calibration during startup." />
    <ParamBool id="chanIdEn" name="Channel ID" group="General" default="false" visible="true" editable="true" desc="FIFO channel number identifier enable." />
    <ParamRange id="holdCount" name="Hold Count" group="General" default="29" min="1" max="255" resolution="1" visible="true" editable="true" desc="Global max HOLD count applied to all Sar ADC groups." />
    <ParamRange id="sampTim0" name="Timer 0" group="Sample Timer" default="32" min="1" max="1024" resolution="1" visible="true" editable="true" desc="Sample Timer 0 that can be used for each group. Actual time = sample_time_in_clocks / CLK_HF3 / 2." />
    <ParamRange id="sampTim1" name="Timer 1" group="Sample Timer" default="32" min="1" max="1024" resolution="1" visible="true" editable="true" desc="Sample Timer 1 that can be used for each group. Actual time = sample_time_in_clocks / CLK_HF3 / 2." />
    <ParamRange id="sampTim2" name="Timer 2" group="Sample Timer" default="32" min="1" max="1024" resolution="1" visible="true" editable="true" desc="Sample Timer 2 that can be used for each group. Actual time = sample_time_in_clocks / CLK_HF3 / 2." />

    <ParamBool id="inFlash" name="Store Config in Flash" group="Advanced" default="true" visible="true" editable="true" desc="Controls whether the configuration structure is stored in flash (const, true) or SRAM (not const, false)." />

    <Repeat count="12">
      <ParamString id="dirSampRcs$idx" name="dirSampRcs$idx" group="Internal" default="pass[0].sar[0].dir_sampler[$idx]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="dirSampUsed$idx" name="dirSampUsed$idx" group="Internal" default="`${isBlockUsed(dirSampRcs$idx)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="dirPosSampRcs$idx" name="dirPosSampRcs$idx" group="Internal" default="pass[0].sar[0].dir_sampler[`${$idx - 1}`]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="dirPosSampUsed$idx" name="dirPosChUsed$idx" group="Internal" default="`${isBlockUsed(dirPosSampRcs$idx)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="odd$idx" name="odd$idx" group="Internal" default="`${0 != ($idx % 2)}`" visible="`${debug}`" editable="false" desc="" />
    </Repeat>
    <ParamRange id="dirSampEn" name="dirSampEn" group="Internal" default="`${(dirSampUsed0 ? 1 : 0) |
                                                                             (dirSampUsed1 ? 2 : 0) |
                                                                             (dirSampUsed2 ? 4 : 0) |
                                                                             (dirSampUsed3 ? 8 : 0) |
                                                                             (dirSampUsed4 ? 16 : 0) |
                                                                             (dirSampUsed5 ? 32 : 0) |
                                                                             (dirSampUsed6 ? 64 : 0) |
                                                                             (dirSampUsed7 ? 128 : 0) |
                                                                             (dirSampUsed8 ? 256 : 0) |
                                                                             (dirSampUsed9 ? 512 : 0) |
                                                                             (dirSampUsed10 ? 1024 : 0) |
                                                                             (dirSampUsed11 ? 2048 : 0)}`" min="0" max="4095" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <Repeat count="4">
      <ParamString id="muxSampRcs$idx" name="muxSampRcs$idx" group="Internal" default="pass[0].sar[0].muxed_sampler[$idx]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="muxSampUsed$idx" name="muxSampUsed$idx" group="Internal" default="`${isBlockUsed(muxSampRcs$idx)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="muxPosSampRcs$idx" name="muxPosSampRcs$idx" group="Internal" default="pass[0].sar[0].muxed_sampler[`${$idx - 1}`]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="muxPosSampUsed$idx" name="muxPosSampUsed$idx" group="Internal" default="`${isBlockUsed(muxPosSampRcs$idx)}`" visible="`${debug}`" editable="false" desc="" />
    </Repeat>
    <ParamRange id="muxSampEn" name="muxSampEn" group="Internal" default="`${(muxSampUsed0 ? 1 : 0) |
                                                                             (muxSampUsed1 ? 2 : 0) |
                                                                             (muxSampUsed2 ? 4 : 0) |
                                                                             (muxSampUsed3 ? 8 : 0)}`" min="0" max="15" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <Repeat count="28">
      <ParamString id="chanRsc$idx" name="chanRsc$idx" group="Internal" default="pass[0].sar[0].ch[$idx]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="chanUsed$idx" name="chanUsed$idx" group="Internal" default="`${isBlockUsed(chanRsc$idx)}`" visible="`${debug}`" editable="false" desc="" />
    </Repeat>

    <Repeat count="8">
      <ParamString id="grpRsc$idx" name="grpRsc$idx" group="Internal" default="pass[0].sar[0].seq[0].grp[$idx]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="grpUsed$idx" name="grpUsed$idx" group="Internal" default="`${isBlockUsed(grpRsc$idx)}`" visible="`${debug}`" editable="false" desc="" />

      <ParamString id="limitRsc$idx" name="limitRsc$idx" group="Internal" default="pass[0].sar[0].limit[$idx]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="limitUsed$idx" name="limitUsed$idx" group="Internal" default="`${isBlockUsed(limitRsc$idx)}`" visible="`${debug}`" editable="false" desc="" />
    </Repeat>

    <Repeat count="2">
      <ParamString id="firRsc$idx" name="firRsc$idx" group="Internal" default="pass[0].sar[0].filter[$idx]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="firUsed$idx" name="firUsed$idx" group="Internal" default="`${isBlockUsed(firRsc$idx)}`" visible="`${debug}`" editable="false" desc="" />
    </Repeat>

    <Repeat count="4">
      <ParamString id="bufRsc$idx" name="bufRsc$idx" group="Internal" default="pass[0].sar[0].fifo[0].buffer[$idx]" visible="false" editable="false" desc="" />
      <ParamBool id="bufUsed$idx" name="bufUsed$idx" group="Internal" default="`${isBlockUsed(bufRsc$idx)}`" visible="false" editable="false" desc="" />
    </Repeat>
    <ParamString id="fifoRsc" name="fifoRsc" group="Internal" default="pass[0].sar[0].fifo[0]" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="fifoUsed" name="fifoUsed" group="Internal" default="`${bufUsed0 || bufUsed1 || bufUsed2 || bufUsed3}`" visible="`${debug}`" editable="false" desc="" />

    <ParamString id="hppassRsc" name="hppassRsc" group="Internal" default="pass[0]" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="hppassUsed" name="hppassUsed" group="Internal" default="`${isBlockUsed(hppassRsc)}`" visible="`${debug}`" editable="false" desc="" />
  </Parameters>
  <DRCs>
    <DRC type="ERROR" text="HPPASS should be enabled and configured" condition="`${!hppassUsed}`" >
      <FixIt action="ENABLE_BLOCK" target="`${hppassRsc}`" value="hppass-1.0" valid="true" />
    </DRC>
    <DRC type="ERROR" text="The Power should be enabled and configured" condition="`${!powerUsed}`" >
      <FixIt action="ENABLE_BLOCK" target="`${powerRsc}`" value="power_v2-1.0" valid="true" />
    </DRC>
  </DRCs>
  <ConfigFirmware>
    <ConfigDefine name="`${INST_NAME}`_VREF" value="`${vRefMv}`U" public="true" include="true" />
    <ConfigStruct name="`${cfgName}`" type="cy_stc_hppass_sar_t" const="`${inFlash}`" public="true" include="true" >
      <Member name="vref"      value="`${vref}`" />
      <Member name="lowSupply" value="`${lowSupply}`" />
      <Member name="offsetCal" value="`${offsetCalibEn}`" />
      <Member name="linearCal" value="`${linearCalibEn}`" />
      <Member name="gainCal"   value="`${gainCalibEn}`" />
      <Member name="chanId"    value="`${chanIdEn}`" />
      <Member name="aroute"    value="true" />
      <Member name="dirSampEnMsk" value="`${toHex(dirSampEn)}`U" />
      <Member name="muxSampEnMsk" value="`${toHex(muxSampEn)}`U" />
      <Member name="holdCount" value="`${holdCount}`U" />
      <ConfigArray name="dirSampGain" type="nested" const="false" public="true" include="true" >
        <ArrayElement value="`${dirSampUsed$idx{0} ? getExposedMember(dirSampRcs$idx{0}, &quot;gain&quot;) : odd$idx{0} ? dirPosSampUsed$idx{0} ? getExposedMember(dirPosSampRcs$idx{0}, &quot;diff&quot;) ? getExposedMember(dirPosSampRcs$idx{0}, &quot;gain&quot;) : &quot;CY_HPPASS_SAR_SAMP_GAIN_1&quot; : &quot;CY_HPPASS_SAR_SAMP_GAIN_1&quot; : &quot;CY_HPPASS_SAR_SAMP_GAIN_1&quot;}`" count="12" />
      </ConfigArray>
      <ConfigArray name="muxSampGain" type="nested" const="false" public="true" include="true" >
        <ArrayElement value="`${muxSampUsed$idx{0} ? getExposedMember(muxSampRcs$idx{0}, &quot;gain&quot;) : odd$idx{0} ? muxPosSampUsed$idx{0} ? getExposedMember(muxPosSampRcs$idx{0}, &quot;diff&quot;) ? getExposedMember(muxPosSampRcs$idx{0}, &quot;gain&quot;) : &quot;CY_HPPASS_SAR_SAMP_GAIN_1&quot; : &quot;CY_HPPASS_SAR_SAMP_GAIN_1&quot; : &quot;CY_HPPASS_SAR_SAMP_GAIN_1&quot;}`" count="4" />
      </ConfigArray>
      <ConfigArray name="sampTime" type="nested" const="false" public="true" include="true" >
        <ArrayElement value="`${sampTim0}`U" />
        <ArrayElement value="`${sampTim1}`U" />
        <ArrayElement value="`${sampTim2}`U" />
      </ConfigArray>
      <ConfigArray name="chan" type="nested" const="false" public="true" include="true" >
        <ArrayElement value="`${chanUsed$idx{0} ? &quot;&amp;&quot; . getExposedMember(chanRsc$idx{0}, &quot;cfgName&quot;) : &quot;NULL&quot;}`" count="28" />
      </ConfigArray>
      <ConfigArray name="grp" type="nested" const="false" public="true" include="true" >
        <ArrayElement value="`${grpUsed$idx{0} ? &quot;&amp;&quot; . getExposedMember(grpRsc$idx{0}, &quot;cfgName&quot;) : &quot;NULL&quot;}`" count="8" />
      </ConfigArray>
      <ConfigArray name="limit" type="nested" const="false" public="true" include="true" >
        <ArrayElement value="`${limitUsed$idx{0} ? &quot;&amp;&quot; . getExposedMember(limitRsc$idx{0}, &quot;cfgName&quot;) : &quot;NULL&quot;}`" count="8" />
      </ConfigArray>
      <ConfigArray name="muxMode" type="nested" const="false" public="true" include="true" >
        <ArrayElement value="CY_HPPASS_SAR_MUX_SEQ" count="4" />
      </ConfigArray>
      <ConfigArray name="fir" type="nested" const="false" public="true" include="true" >
        <ArrayElement value="`${firUsed$idx{0} ? &quot;&amp;&quot; . getExposedMember(firRsc$idx{0}, &quot;cfgName&quot;) : &quot;NULL&quot;}`" count="2" />
      </ConfigArray>
      <Member name="fifo" value="`${fifoUsed ? &quot;&amp;&quot; . getExposedMember(fifoRsc, &quot;cfgName&quot;) : &quot;NULL&quot;}`" />
    </ConfigStruct>
  </ConfigFirmware>
</PersonalityTemplate>
