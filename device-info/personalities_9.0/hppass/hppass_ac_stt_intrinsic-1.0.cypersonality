<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file hppass_ac_stt_intrinsic-1.0.cypersonality
* \version 1.0
*
* \brief
* Intrinsic HPPASS Autonomous Controller State Transition Table personality description file.
*
********************************************************************************
* \copyright
* (c) (2024), Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
*
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<PersonalityTemplate id="hppass_stt_intrinsic" name="STT Intrinsic" version="1.0" intrinsic="true" xmlns="http://cypress.com/xsd/cyhwpersonality_v9">
  <FittingRules>
    <MappingRules>
      <IpBlock name="mxs40mcpass" />
      <Resource name="pass\.ac\.stt"/>
    </MappingRules>
  </FittingRules>
  <ExposedMembers>
    <ExposedMember key="cfgName" paramId="cfgName" />
    <ExposedMember key="stateCnt" paramId="stateCnt" />
  </ExposedMembers>
  <Parameters>
    <ParamString id="cfgName" name="cfgName" group="Internal" default="`${INST_NAME}`_config" visible="false" editable="false" desc="" />
    <Repeat count="16">
      <ParamString id="stateRsc$idx" name="stateRsc$idx" group="Internal" default="pass[0].ac[0].stt[0].vstate[$idx]" visible="false" editable="false" desc="" />
      <ParamBool id="stateUsed$idx" name="stateUsed$idx" group="Internal" default="`${isBlockUsed(stateRsc$idx)}`" visible="false" editable="false" desc="" />
    </Repeat>
    <ParamRange id="stateCnt" name="stateCnt" group="Internal"
                default="`${(stateUsed0  ? 1 : 0) +
                            (stateUsed1  ? 1 : 0) +
                            (stateUsed2  ? 1 : 0) +
                            (stateUsed3  ? 1 : 0) +
                            (stateUsed4  ? 1 : 0) +
                            (stateUsed5  ? 1 : 0) +
                            (stateUsed6  ? 1 : 0) +
                            (stateUsed7  ? 1 : 0) +
                            (stateUsed8  ? 1 : 0) +
                            (stateUsed9  ? 1 : 0) +
                            (stateUsed10 ? 1 : 0) +
                            (stateUsed11 ? 1 : 0) +
                            (stateUsed12 ? 1 : 0) +
                            (stateUsed13 ? 1 : 0) +
                            (stateUsed14 ? 1 : 0) +
                            (stateUsed15 ? 1 : 0)}`" 
                min="0" max="16" resolution="1" visible="false" editable="false" desc="" />
  </Parameters>
  <ConfigFirmware>
    <ConfigArray name="`${cfgName}`" type="cy_stc_hppass_ac_stt_t" const="true" public="true" include="`${stateCnt &gt; 0}`" >
      <ConfigStruct name="empty" type="nested" const="false" public="true" repeatCount="16" include="`${stateCnt &gt; $idx{0}}`">
        <Member name="condition" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;condition&quot;) : &quot;CY_HPPASS_CONDITION_FALSE&quot;}`" />
        <Member name="action" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;action&quot;) : &quot;CY_HPPASS_ACTION_STOP&quot;}`" />
        <Member name="branchStateIdx" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;branchState&quot;) : 0}`U" />
        <Member name="interrupt" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;intr&quot;) : false}`" />
        <Member name="count" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;count&quot;) : 0}`U" />
        <Member name="gpioOutUnlock" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;doutUnlock&quot;) : false}`" />
        <Member name="gpioOutMsk" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;dout&quot;) : 0}`U" />
        <Member name="csgUnlock" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;csgUnlock&quot;) : &quot;{false, false, false, false, false}&quot;}`" />
        <Member name="csgEnable" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;csgEnable&quot;) : &quot;{false, false, false, false, false}&quot;}`" />
        <Member name="csgDacTrig" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;csgDacTrig&quot;) : &quot;{false, false, false, false, false}&quot;}`" />
        <Member name="sarUnlock" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;sarUnlock&quot;) : false}`" />
        <Member name="sarEnable" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;sarEnable&quot;) : false}`" />
        <Member name="sarGrpMsk" value="`${stateUsed$idx{1} ? getExposedMember(stateRsc$idx{1}, &quot;sarGrp&quot;) : 0}`U" />
        <Member name="sarMux" value="{{false, 0U}, {false, 0U}, {false, 0U}, {false, 0U}}" /> <!-- DRIVERS-15250 -->
      </ConfigStruct>
    </ConfigArray>
  </ConfigFirmware>
</PersonalityTemplate>

