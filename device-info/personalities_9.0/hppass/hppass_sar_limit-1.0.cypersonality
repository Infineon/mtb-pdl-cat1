<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file hppass_sar_limit-1.0.cypersonality
* \version 1.0
*
* \brief
* HPPASS SAR Limit personality description file.
*
********************************************************************************
* \copyright
* (c) (2024), Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
*
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<PersonalityTemplate id="hppass_sar_limit" name="SAR Limit Crossing Detection" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v9">
  <FittingRules>
    <MappingRules>
    <IpBlock name="mxs40mcpass" />
    <Resource name="pass\.sar\.limit"/>
    </MappingRules>
  </FittingRules>
  <ExposedMembers>
    <ExposedMember key="cfgName" paramId="cfgName" />
  </ExposedMembers>
  <Parameters>
    <ParamBool id="debug" name="debug" group="debug" default="false" visible="false" editable="false" desc="" />
    <ParamString id="cfgName" name="cfgName" group="Internal" default="`${INST_NAME}`_config" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="inst" name="inst" group="Internal" default="`${getInstNumber(&quot;limit&quot;)}`" min="0" max="7" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamChoice id="limitCond" name="Limit Condition" group="General" default="CY_HPPASS_SAR_COND_BELOW" visible="true" editable="true" desc="Limit condition.">
      <Entry name="Below the Threshold"  value="CY_HPPASS_SAR_COND_BELOW"   visible="true" />
      <Entry name="Above the Threshold"  value="CY_HPPASS_SAR_COND_ABOVE"   visible="true" />
      <Entry name="Inside the Window"    value="CY_HPPASS_SAR_COND_INSIDE"  visible="true" />
      <Entry name="Outside the Window"   value="CY_HPPASS_SAR_COND_OUTSIDE" visible="true" />
    </ParamChoice>
    
    <Repeat count="28">
      <ParamString id="chanRsc$idx" name="chanRsc$idx" group="Internal" default="pass[0].sar[0].ch[$idx]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="chanUsed$idx" name="chanUsed$idx" group="Internal" default="`${hasBlock(chanRsc$idx) ? isBlockUsed(chanRsc$idx) : false}`" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="chanLimit$idx" name="chanLimit$idx" group="Internal" default="`${chanUsed$idx ? getExposedMember(chanRsc$idx, &quot;limit&quot;) : &quot;&quot;}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="chanMine$idx" name="chanMine$idx" group="Internal" default="`${chanLimit$idx eq inst}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="chanSign$idx" name="chanSign$idx" group="Internal" default="`${chanUsed$idx ? getExposedMember(chanRsc$idx, &quot;sign&quot;) : false}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="s$idx" name="s$idx" group="Internal" default="`${chanMine$idx &amp;&amp; chanSign$idx}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="u$idx" name="u$idx" group="Internal" default="`${chanMine$idx &amp;&amp; !chanSign$idx}`" visible="`${debug}`" editable="false" desc="" />
    </Repeat>
    <Repeat count="2">
      <ParamString id="filtRsc$idx" name="filtRsc$idx" group="Internal" default="pass[0].sar[0].filter[$idx]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="filtUsed$idx" name="filtUsed$idx" group="Internal" default="`${hasBlock(filtRsc$idx) ? isBlockUsed(filtRsc$idx) : false}`" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="filtLimit$idx" name="filtLimit$idx" group="Internal" default="`${filtUsed$idx ? getExposedMember(filtRsc$idx, &quot;limit&quot;) : &quot;&quot;}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="filtMine$idx" name="filtMine$idx" group="Internal" default="`${filtLimit$idx eq inst}`" visible="`${debug}`" editable="false" desc="" />
    </Repeat>
    <ParamBool id="signed" name="signed" group="Internal" default="`${s0 | s1 | s2 | s3 | s4 | s5 | s6 | s7 | s8 | s9 | s10 | s11 | s12 | s13 | s14 | s15 | s16 | s17 | s18 | s19 | s20 | s21 | s22 | s23 | s24 | s25 | s26 | s27 | filtMine0 | filtMine1}`" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="unsign" name="unsign" group="Internal" default="`${u0 | u1 | u2 | u3 | u4 | u5 | u6 | u7 | u8 | u9 | u10 | u11 | u12 | u13 | u14 | u15 | u16 | u17 | u18 | u19 | u20 | u21 | u22 | u23 | u24 | u25 | u26 | u27}`" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="sign" name="sign" group="Internal" default="`${signed &amp;&amp; !unsign}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="format" name="Threshold Value(s) Format" group="General" default="`${sign ? &quot;Signed&quot; : &quot;Unsigned&quot;}`" visible="true" editable="false" desc="The Result Format inherited from the assigned channel(s)/filter(s)." />

    <ParamRange id="hiThd" name="High Threshold" group="General" default="1" min="`${sign ? -pow(2, 15) + 1 : 1}`" max="`${sign ? pow(2, 15) - 1 : pow(2, 16) - 1}`" resolution="1" visible="`${limitCond ne CY_HPPASS_SAR_COND_BELOW}`" editable="`${limitCond ne CY_HPPASS_SAR_COND_BELOW}`" desc="High threshold" />
    <ParamRange id="loThd" name="Low Threshold"  group="General" default="0" min="`${sign ? -pow(2, 15) : 0}`" max="`${sign ? pow(2, 15) - 2 : pow(2, 16) - 2}`" resolution="1" visible="`${limitCond ne CY_HPPASS_SAR_COND_ABOVE}`" editable="`${limitCond ne CY_HPPASS_SAR_COND_ABOVE}`" desc="Low threshold" />

    <ParamString id="sarRsc" name="sarRsc" group="Internal" default="pass[0].sar[0]" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="sarUsed" name="sarUsed" group="Internal" default="`${isBlockUsed(sarRsc)}`" visible="`${debug}`" editable="false" desc="" />
  </Parameters>
  <DRCs>
    <DRC type="ERROR" text="SAR should be enabled and configured" condition="`${!sarUsed}`" >
      <FixIt action="ENABLE_BLOCK" target="`${sarRsc}`" value="hppass_sar-1.0" valid="true" />
    </DRC>
    <DRC type="ERROR" text="The High Threshold must be grater than the Low Threshold" condition="`${((limitCond eq CY_HPPASS_SAR_COND_INSIDE) || (limitCond eq CY_HPPASS_SAR_COND_OUTSIDE)) &amp;&amp; hiThd &lt;= loThd}`" />
    <!-- <DRC type="ERROR" text="The Limit Crossing Detection block must be assigned to at least one channel/filter" condition="`${!(signed | unsign)}`" /> -->
    <DRC type="ERROR" text="The Limit Crossing Detection block `${inst}` cannot be assigned to multiple channels/filters with different sign settings (filters are always signed)" condition="`${signed &amp; unsign}`" />
  </DRCs>
  <ConfigFirmware>
    <ConfigDefine name="`${INST_NAME}`_IDX" value="`${inst}`U" public="true" include="true" />
    <ConfigStruct name="`${cfgName}`" type="cy_stc_hppass_sar_limit_t" const="false" public="true"  include="true">
      <Member name="cond" value="`${limitCond}`" />
      <Member name="high" value="`${hiThd}`" />
      <Member name="low"  value="`${loThd}`" />
    </ConfigStruct>
  </ConfigFirmware>
</PersonalityTemplate>
