<?xml version="1.0" encoding="utf-8"?>


<!--****************************************************************************
* \file hfclk.cypersonality
* \version 4.0
*
* \brief
* CLK_HF personality description file. Supports CAT1D Device family.
*
********************************************************************************
* \copyright
* Copyright 2022 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->
<PersonalityTemplate id="hfclk_v2" name="CLK_HF" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v10">
  <Constants>
  <!-- Hard coded frequency maxes for now, but should be dynamically fetched -->
    <Const id="CLK_FREQUENCIES_EXPLORER_ULP" value=" 50; 50; 50; 50; 50; 50; 50; 25; 50; 25; 25; 50; 50; 25" />
    <Const id="CLK_FREQUENCIES_EXPLORER_LP"  value=" 80;140;110;200;200;104;104; 50; 50; 50; 40; 80; 50; 60" />
    <Const id="CLK_FREQUENCIES_EXPLORER_HP"  value="200;400;300;400;400;208;208;100; 50;100;100;200; 64;125" />

  <!-- Constants used throughout the personality-->
    <Const id="MAX_SOURCE_FREQUENCY_EXPLORER"  value="500000000" />
    <Const id="MHZ_CONVERSION"                 value="1000000" />
  </Constants>
  <FittingRules>
    <MappingRules>
      <IpBlock name="mxs22srss" />
      <Resource name="srss\.clock\.hfclk" />
    </MappingRules>
  </FittingRules>
  <ExposedMembers>
    <ExposedMember key="frequency" paramId="frequency" />
    <ExposedMember key="accuracy"  paramId="accuracy" />
    <ExposedMember key="error"     paramId="error" />
    <ExposedMember key="clockInst" paramId="clockInst" />
    <ExposedMember key="sourceClockDisplayName" paramId="sourceClockDisplayName" />
  </ExposedMembers>
  <Parameters>
    <!-- PDL documentation -->
    <ParamDoc id="pdlDoc" name="Configuration Help" group="Overview" default="file:///`${cy_libs_path()}`/docs/pdl_api_reference_manual/html/group__group__sysclk__clk__hf.html" linkText="Open High-Frequency Clocks Documentation" visible="true" desc="Opens the Peripheral Driver Library Documentation" />

    <ParamBool
      id="is22srssAvailable" name="is22srssAvailable" group=""
      default="`${(&quot;mxs22srss&quot; eq getIpBlockName())}`" visible="false" editable="false" desc="" />

    <ParamRange id="maxSourceClockFreq" name="maxSourceClockFreq" group="Internal" default="$MAX_SOURCE_FREQUENCY_EXPLORER" min="0" max="1000000000" resolution="1" visible="false" editable="false" desc="" />

    <ParamRange id="clockInst" name="clockInst" group="Internal" default="`${getInstNumber(&quot;hfclk&quot;)}`" min="0" max="`${NUM_HFROOT-1}`" resolution="1" visible="false" editable="false" desc="" />
    <ParamChoice id="sourceClockNumber" name="Source Clock" group="General" default="0" visible="true" editable="true" desc="The clock source for CLK_HF`${clockInst}`">
      <Entry name="CLK_PATH0"  value="0"  visible="`${NUM_CLKPATH >= 1}`"/>
      <Entry name="CLK_PATH1"  value="1"  visible="`${NUM_CLKPATH >= 2}`"/>
      <Entry name="CLK_PATH2"  value="2"  visible="`${NUM_CLKPATH >= 3}`"/>
      <Entry name="CLK_PATH3"  value="3"  visible="`${NUM_CLKPATH >= 4}`"/>
      <Entry name="CLK_PATH4"  value="4"  visible="`${NUM_CLKPATH >= 5}`"/>
      <Entry name="CLK_PATH5"  value="5"  visible="`${NUM_CLKPATH >= 6}`"/>
      <Entry name="CLK_PATH6"  value="6"  visible="`${NUM_CLKPATH >= 7}`"/>
      <Entry name="CLK_PATH7"  value="7"  visible="`${NUM_CLKPATH >= 8}`"/>
      <Entry name="CLK_PATH8"  value="8"  visible="`${NUM_CLKPATH >= 9}`"/>
      <Entry name="CLK_PATH9"  value="9"  visible="`${NUM_CLKPATH >= 10}`"/>
      <Entry name="CLK_PATH10" value="10" visible="`${NUM_CLKPATH >= 11}`"/>
      <Entry name="CLK_PATH11" value="11" visible="`${NUM_CLKPATH >= 12}`"/>
      <Entry name="CLK_PATH12" value="12" visible="`${NUM_CLKPATH >= 13}`"/>
      <Entry name="CLK_PATH13" value="13" visible="`${NUM_CLKPATH >= 14}`"/>
      <Entry name="CLK_PATH14" value="14" visible="`${NUM_CLKPATH >= 15}`"/>
      <Entry name="CLK_PATH15" value="15" visible="`${NUM_CLKPATH >= 16}`"/>
    </ParamChoice>
    <ParamBool id="ClkHfCsv" name="CSV" group="CSV" default="false" visible="`${(CSV_PRESENT eq 1)}`" editable="true" desc="Enables/Disables CSV configuration." />
    <ParamRange id="accuracyCsv" name="Accuracy" group="CSV" default="99" min="1" max="100" resolution="1" visible="`${ClkHfCsv}`" editable="`${ClkHfCsv}`" desc="Accuracy of the source clock." />
    <ParamChoice id="sourceClockCsv" name="Reference Clock" group="CSV" default="IMO" visible="`${ClkHfCsv}`" editable="`${ClkHfCsv}`" desc="The reference clock source selection">
      <Entry name="IMO" value="IMO" visible="true"/>
      <Entry name="EXT" value="EXT" visible="true"/>
      <Entry name="ECO" value="ECO" visible="`${hasBlock(&quot;srss[0].clock[0].eco[0]&quot;)}`"/>
      <Entry name="IHO" value="IHO" visible="true"/>
     </ParamChoice>

     <ParamChoice id="actionCsv" name="Action" group="CSV" default="FAULT" visible="`${ClkHfCsv}`" editable="`${ClkHfCsv}`" desc="CSV action">
      <Entry name="Fault" value="FAULT" visible="true"/>
      <Entry name="Reset" value="RESET" visible="true"/>
     </ParamChoice>

    <!-- Max frequencies are determined by power mode -->
    <ParamString id="maxFrequencies" name="" group="" desc="" visible="false" editable="false"
      default="`${getExposedMember(&quot;srss[0].power[0]&quot;, &quot;usingUlp&quot;)
        ? &quot;$CLK_FREQUENCIES_EXPLORER_ULP&quot;
        : (getExposedMember(&quot;srss[0].power[0]&quot;, &quot;usingLp&quot;)
          ? &quot;$CLK_FREQUENCIES_EXPLORER_LP&quot;
          : &quot;$CLK_FREQUENCIES_EXPLORER_HP&quot;)}`" />

    <!-- If the FLL/PLL are enabled, their output drive the corresponding clock path -->
    <ParamBool id="isPll250mUsed" name="Is PLL-250MHz Used" group="Internal" default="`${(sourceClockNumber &lt; NUM_DPLL_LP) &amp;&amp; isBlockUsed(&quot;srss[0].clock[0].pll250m[&quot; . (sourceClockNumber) . &quot;]&quot;)}`" visible="false" editable="false" desc="" />
    <ParamBool id="isPll500mUsed" name="Is PLL-500MHz Used" group="Internal" default="`${(sourceClockNumber eq NUM_DPLL_LP) &amp;&amp; isBlockUsed(&quot;srss[0].clock[0].pll500m[&quot; . (sourceClockNumber - (NUM_DPLL_LP)) . &quot;]&quot;)}`" visible="false" editable="false" desc="" />

    <ParamString id="sourceClock" name="Source clock resource" group="Internal" default="`${isPll250mUsed ? &quot;pll250m[&quot; . (sourceClockNumber) . &quot;]&quot; :
                                                                                            (sourceClockNumber eq NUM_DPLL_LP) ? isPll500mUsed ? &quot;pll500m[&quot; . (sourceClockNumber - (NUM_DPLL_LP)) . &quot;]&quot; :
                                                                                            &quot;pathmux[&quot; . sourceClockNumber . &quot;]&quot; :
                                                                                            &quot;pathmux[&quot; . sourceClockNumber . &quot;]&quot;}`" visible="false" editable="false" desc="" />

    <ParamString id="sourceClockDisplayName" name="Source Clock Display Name" group="Internal" default="`${getParamValueDisplay(&quot;sourceClock&quot;)}`" visible="false" editable="false" desc="" />
    <ParamString id="sourceClockRsc" name="Source Clock" group="Internal" default="srss[0].clock[0].`${sourceClock}`" visible="false" editable="false" desc="" />

    <!-- Set an error if the source clock is not enabled or contains an error -->
    <ParamBool id="srcNotUsed" name="Clock Source Enabled" group="Internal" default="`${!isBlockUsed(sourceClockRsc)}`" visible="false" editable="false" desc="" />
    <ParamBool id="error" name="Clock Error" group="Internal" default="`${srcNotUsed || getExposedMember(sourceClockRsc, &quot;error&quot;)}`" visible="false" editable="false" desc="" />
    <ParamRange id="sourceFreq" name="sourceFrequency" group="Internal" default="`${!error ? getExposedMember(sourceClockRsc, &quot;frequency&quot;) : 0}`" min="0" max="`${maxSourceClockFreq}`" resolution="0.001" visible="false" editable="false" desc="" />
    <ParamString id="accuracy" name="accuracy" group="Internal" default="`${!error ? getExposedMember(sourceClockRsc, &quot;accuracy&quot;) : 0}`" visible="false" editable="false" desc="" />
    <ParamString id="sourceFrequencyInfo" name="Source Frequency" group="General" default="`${formatFrequency(sourceFreq,accuracy)}`" visible="true" editable="false" desc="Source clock frequency" />


    <ParamChoice id="divider" name="Divider" group="General" default="1" visible="true" editable="true" desc="The source clock frequency divider">
      <Entry name="1" value="1" visible="true"/>
      <Entry name="2" value="2" visible="true"/>
      <Entry name="3" value="3" visible="true"/>
      <Entry name="4" value="4" visible="true"/>
      <Entry name="5" value="5" visible="true"/>
      <Entry name="6" value="6" visible="true"/>
      <Entry name="7" value="7" visible="true"/>
      <Entry name="8" value="8" visible="true"/>
      <Entry name="9" value="9" visible="true"/>
      <Entry name="10" value="10" visible="true"/>
      <Entry name="11" value="11" visible="true"/>
      <Entry name="12" value="12" visible="true"/>
      <Entry name="13" value="13" visible="true"/>
      <Entry name="14" value="14" visible="true"/>
      <Entry name="15" value="15" visible="true"/>
      <Entry name="16" value="16" visible="true"/>
    </ParamChoice>
    <ParamRange id="frequency" name="Frequency" group="Internal" default="`${sourceFreq / divider}`" min="0" max="`${maxSourceClockFreq}`" resolution="1" visible="false" editable="false" desc="" />
    <!-- If the frequency is less than one MHz, display its value in kHz -->
    <ParamString id="frequencyInfo" name="Frequency" group="General" default="`${formatFrequency(frequency,accuracy)}`" visible="true" editable="false" desc="The resulting CLK_HF`${clockInst}` output clock frequency" />
    <ParamSignal port="root_clk[0]" name="Clock Output" group="General" visible="`${hasVisibleOption(&quot;root_clk[0]&quot;)}`" desc="A high-frequency clock output driving specific peripherals" canBeEmpty="true" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="DEFAULT" reason="">
          <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="WARNING" reason="">
          <Choice>
            <Option value="CY_GPIO_DM_STRONG_IN_OFF"/>
            <Option value="CY_GPIO_DM_STRONG"/>
            <Option value="CY_GPIO_DM_OD_DRIVESLOW_IN_OFF"/>
            <Option value="CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF"/>
            <Option value="CY_GPIO_DM_OD_DRIVESLOW"/>
            <Option value="CY_GPIO_DM_OD_DRIVESHIGH"/>
            <Option value="CY_GPIO_DM_PULLUP_IN_OFF"/>
            <Option value="CY_GPIO_DM_PULLDOWN_IN_OFF"/>
            <Option value="CY_GPIO_DM_PULLUP_DOWN_IN_OFF"/>
            <Option value="CY_GPIO_DM_PULLUP"/>
            <Option value="CY_GPIO_DM_PULLDOWN"/>
            <Option value="CY_GPIO_DM_PULLUP_DOWN"/>
          </Choice>
        </Parameter>
      </Constraint>
      <!--Constraint type="REQUIRE" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="ERROR" reason="">
          <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
        </Parameter>
      </Constraint-->
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>
  </Parameters>
  <DRCs>
    <DRC type="ERROR" text="Source clock for CLK_HF`${clockInst}` is not enabled" condition="`${srcNotUsed}`" >
      <FixIt action="ENABLE_BLOCK" target="`${sourceClockRsc}`" value="" valid="true" />
    </DRC>
    <DRC type="ERROR" text="CLK_HF0 is slower than legal min 200 kHz." condition="`${!error &amp;&amp; ((clockInst == 0) &amp;&amp; (sourceFreq &lt; 200000))}`" />
    <DRC type="ERROR" text="CLK_HF`${clockInst}` is greater than legal max `${splitAt(maxFrequencies, clockInst)}` MHz." condition="`${!error &amp;&amp; is22srssAvailable &amp;&amp; (frequency &gt; ($MHZ_CONVERSION * splitAt(maxFrequencies, clockInst)))}`" />
    <DRC type="INFO" text="The top-level System Clocks must be enabled to generate the clock initialization code" condition="`${!isBlockUsed(&quot;srss[0].clock[0]&quot;) &amp;&amp; clockInst == 0}`" location="srss[0].clock[0]" >
      <FixIt action="ENABLE_BLOCK" target="srss[0].clock[0]" value="" valid="true" />
    </DRC>
    <!--DRC type="ERROR" text="Only one connection between the clock system and GPIO pins is possible, either EXTCLK or CLK_HF4." condition="`${hasConnection(&quot;root_clk&quot;, 0) &amp;&amp; isBlockUsed(&quot;srss[0].clock[0].ext[0]&quot;)}`" /-->
  </DRCs>
  <ConfigFirmware>
    <ConfigInclude value="cy_sysclk.h" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKHF`${clockInst}`_ENABLED" public="false" value="1" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKHF`${clockInst}`_DIVIDER" public="false" value="CY_SYSCLK_CLKHF_`${divider == 1 ? &quot;NO_DIVIDE&quot; : ((&quot;DIVIDE_BY_&quot;) . divider)}`" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKHF`${clockInst}`" public="true" value="`${clockInst}`UL" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKHF`${clockInst}`_FREQ_MHZ" public="false" value="`${frequency / $MHZ_CONVERSION}`UL" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKHF`${clockInst}`_CLKPATH" public="false" value="CY_SYSCLK_CLKHF_IN_CLKPATH`${sourceClockNumber}`" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKHF`${clockInst}`_CLKPATH_NUM" public="true" value="`${sourceClockNumber}`UL" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKHF_CSV_ACCURACY" public="true" value="`${accuracyCsv}`UL" include="`${ClkHfCsv}`" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKHF`${clockInst}`_CSV_ENABLED" public="false" value="`${ClkHfCsv}`" include="`${ClkHfCsv}`" />

    <ConfigStruct name="hf`${clockInst}`CsvConfig" type="cy_stc_clkhf_csv_hf_config_t" const="false" public="true" include="`${ClkHfCsv}`">
      <Member name="clkHf" value="`${clockInst}`" />
      <Member name="refClk" value="CY_SYSCLK_CLKHF_CSV_REF_`${sourceClockCsv}`" />
    </ConfigStruct>
    <ConfigFunction signature="__STATIC_INLINE void Cy_SysClk_ClkHf`${clockInst}`Init(void)" body="    Cy_SysClk_ClkHfSetDivider(`${clockInst}`U, CY_SYSCLK_CLKHF_`${divider == 1 ? &quot;NO_DIVIDE&quot; : ((&quot;DIVIDE_BY_&quot;) . divider)}`);&#xA;    Cy_SysClk_ClkHfSetSource(`${clockInst}`U, CY_CFG_SYSCLK_CLKHF`${clockInst}`_CLKPATH);" public="false" include="`${clockInst eq 0}`" guard="defined(CORE_NAME_CM33_0)"/>
    <ConfigFunction signature="__STATIC_INLINE void Cy_SysClk_ClkHf`${clockInst}`Init(void)" body="    Cy_SysClk_ClkHfSetSource(CY_CFG_SYSCLK_CLKHF`${clockInst}`, CY_CFG_SYSCLK_CLKHF`${clockInst}`_CLKPATH);&#xA;    Cy_SysClk_ClkHfSetDivider(CY_CFG_SYSCLK_CLKHF`${clockInst}`, CY_SYSCLK_CLKHF_`${divider == 1 ? &quot;NO_DIVIDE&quot; : ((&quot;DIVIDE_BY_&quot;) . divider)}`);&#xA;    Cy_SysClk_ClkHfEnable(CY_CFG_SYSCLK_CLKHF`${clockInst}`);" public="false" include="`${clockInst gt 0}`" guard="defined(CORE_NAME_CM33_0)" />
    <ConfigFunction signature="__STATIC_INLINE void Cy_SysClk_ClkHf`${clockInst}`CsvInit(void)" body="    Cy_SysClk_ClkHfCsvConfigure(&amp;hf`${clockInst}`CsvConfig, CY_CFG_SYSCLK_CLKHF_CSV_ACCURACY);&#xA;    Cy_SysClk_ClkHfCsvAction(`${clockInst}`U, CY_SYSCLK_CLKHF_CSV_ACTION_`${actionCsv}`);&#xA;    Cy_SysClk_ClkHfCsvEnable(`${clockInst}`U); " public="false" include="`${ClkHfCsv}`" />
    </ConfigFirmware>
</PersonalityTemplate>
