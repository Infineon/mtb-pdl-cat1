<?xml version="1.0" encoding="utf-8"?>


<!--****************************************************************************
* \file lfclk.cypersonality
* \version 3.0
*
* \brief
* CLK_LF personality description file. It supports CAT1A, CAT1B and
* CAT1D devices.
*
********************************************************************************
* \copyright
* Copyright (c) 2022, Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<Personality id="lfclk" name="CLK_LF" version="3.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v7">
  <Dependencies>
    <IpBlock name="mxs40srss,mxs40ssrss,mxs40srss_ver3" />
    <Resource name="srss\.clock\.lfclk" />
  </Dependencies>
  <ExposedMembers>
    <ExposedMember key="frequency" paramId="frequency" />
    <ExposedMember key="accuracy"  paramId="accuracy" />
    <ExposedMember key="error"     paramId="error" />
  </ExposedMembers>
  <Parameters>
    <!-- PDL documentation -->
    <ParamDoc id="pdlDoc" name="Configuration Help" group="Overview" default="file:///`${cy_libs_path()}`/docs/pdl_api_reference_manual/html/group__group__sysclk__clk__lf.html" linkText="Open Low-Frequency Clock Documentation" visible="true" desc="Opens the Peripheral Driver Library Documentation" />

    <ParamString id="isS40sPiloPresent" name="S40S_PILO Present" group="Internal" default="`${lookupExpression(&quot;S40S_PILO_PRESENT&quot;, 0)}`" visible="false" editable="false" desc="S40S_PILO Present" />
    <ParamString id="isPiloPresent" name="Pilo Present" group="Internal" default="`${lookupExpression(&quot;PILO_PRESENT&quot;, 0)}`" visible="false" editable="false" desc="PILO Present" />

    <ParamChoice id="sourceClock" name="Source Clock" group="General" default="`${(&quot;mxs40srss_ver3&quot; eq getIpBlockName()) ? ilo0 : ilo}`" visible="true" editable="true" desc="The clock source for CLK_LF">
      <Entry name="ALTLF" value="altlf" visible="`${ALTLF_PRESENT}`"/>
      <Entry name="ILO" value="ilo" visible="`${(&quot;mxs40srss&quot; eq getIpBlockName()) || (&quot;mxs40ssrss&quot; eq getIpBlockName())}`"/>
      <Entry name="ILO0" value="ilo0" visible="`${(&quot;mxs40srss_ver3&quot; eq getIpBlockName())}`"/>
      <Entry name="ILO1" value="ilo1" visible="`${(&quot;mxs40srss_ver3&quot; eq getIpBlockName())}`"/>
      <Entry name="PILO" value="pilo" visible="`${(isS40sPiloPresent) || (isPiloPresent)}`"/>
      <Entry name="WCO" value="wco" visible="`${BACKUP_PRESENT}`"/>
      <Entry name="ECO_PRESCALER" value="ecoprescaler" visible="`${hasBlock(&quot;srss[0].clock[0].eco[0]&quot;)}`"/>
    </ParamChoice>
    <ParamString id="sourceClockRsc" name="Source Clock" group="Internal" default="`${sourceClock eq ilo1 ? &quot;srss[0].clock[0].&quot; . ilo . &quot;[1]&quot; : ( sourceClock eq ilo0 ? &quot;srss[0].clock[0].&quot; . ilo . &quot;[0]&quot; : &quot;srss[0].clock[0].&quot; . sourceClock . &quot;[0]&quot;)}`" visible="false" editable="false" desc="" />
    <ParamString id="sourceClockApiName" name="Source Clock API Name" group="Internal" default="`${sourceClock eq ilo   ? &quot;ILO&quot; :
                                                                                         sourceClock eq wco   ? &quot;WCO&quot; :
                                                                                         sourceClock eq ilo0   ? &quot;ILO&quot; :
                                                                                         sourceClock eq ilo1   ? &quot;ILO1&quot; :
                                                                                         sourceClock eq ecoprescaler   ? &quot;ECO_PRESCALER&quot; :
                                                                                         sourceClock eq altlf ? &quot;ALTLF&quot; : &quot;PILO&quot;}`" visible="false" editable="false" desc="" />
    <!-- Set an error if the source clock is not enabled -->
    <ParamBool id="error" name="Clock Error" group="Internal" default="`${!isBlockUsed(sourceClockRsc)}`" visible="false" editable="false" desc="" />
    <ParamRange id="frequency" name="Frequency" group="Internal" default="`${!error ? getExposedMember(sourceClockRsc, &quot;frequency&quot;) : 0}`" min="0" max="100000" resolution="1" visible="false" editable="false" desc="" />
    <ParamString id="accuracy" name="accuracy" group="General" default="`${!error ? getExposedMember(sourceClockRsc, &quot;accuracy&quot;) : 0}`" visible="false" editable="false" desc="" />
    <ParamString id="frequencyInfo" name="Frequency" group="General" default="`${formatFrequency(frequency,accuracy)}`" visible="true" editable="false" desc="The CLK_LF frequency provided by the chosen clock source" />
  </Parameters>
  <DRCs>
    <DRC type="ERROR" text="Source clock for CLK_LF is not enabled" condition="`${error}`" >
      <FixIt action="ENABLE_BLOCK" target="`${sourceClockRsc}`" value="" valid="true" />
    </DRC>
  </DRCs>
  <ConfigFirmware>
    <ConfigInclude value="cy_sysclk.h" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKLF_ENABLED" value="1" public="false" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKLF_FREQ_HZ" value="`${frequency}`" public="true" include="true" />
    <ConfigDefine name="CY_CFG_SYSCLK_CLKLF_SOURCE" value="CY_SYSCLK_CLKLF_IN_`${sourceClockApiName}`" public="true" include="true" />
    <ConfigFunction signature="__STATIC_INLINE void Cy_SysClk_ClkLfInit()" body="    /* The WDT is unlocked in the default startup code */&#xA;    Cy_SysClk_ClkLfSetSource(CY_SYSCLK_CLKLF_IN_`${sourceClockApiName}`);" public="false" include="`${(&quot;mxs40srss&quot; eq getIpBlockName()) || (&quot;mxs40ssrss&quot; eq getIpBlockName())}`" guard="(!defined(CY_DEVICE_SECURE))" />
    <ConfigFunction signature="__STATIC_INLINE void Cy_SysClk_ClkLfInit()" body="    /* The WDT is unlocked in the default startup code */&#xA;    Cy_SysClk_ClkLfSetSource(CY_CFG_SYSCLK_CLKLF_SOURCE);" public="false" include="`${(&quot;mxs40srss_ver3&quot; eq getIpBlockName())}`" />
  </ConfigFirmware>
</Personality>
