<?xml version="1.0" encoding="utf-8"?>


<!--****************************************************************************
* \file i2s.cypersonality
* \version 2.0
*
* \brief
* I2S personality description file. Supports CAT1A and CAT1C family of devices.
*
********************************************************************************
* \copyright
* Copyright (c) (2022), Cypress Semiconductor Corporation (an Infineon company) or
* an affiliate of Cypress Semiconductor Corporation.
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<Personality id="mxaudioss_i2s" name="I2S" version="2.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v7">
  <Dependencies>
    <IpBlock name="mxaudioss_ver2_s40e,mxaudioss" />
    <Resource name="audioss\.i2s" />
  </Dependencies>
  <ExposedMembers />
  <Parameters>
    <!-- PDL documentation -->
    <ParamDoc id="pdlDoc" name="Configuration Help" group="Overview" default="file:///`${cy_libs_path()}`/docs/pdl_api_reference_manual/html/group__group__i2s.html" linkText="Open I2S Documentation" visible="true" desc="Opens the Peripheral Driver Library Documentation" />
    <ParamString id="version" name="version number" group="Internal" default="`${getVersion()}`" visible="false" editable="false" desc="" />

    <!-- Timing -->
    <ParamSignal port="clock[0]" name="Clock" group="Timing" visible="true" desc="Input clock source" canBeEmpty="false" />
    <ParamString id="sourceClock" name="sourceClock" group="General" default="`${getBlockFromSignal(&quot;clock[0]&quot;)}`" visible="false" editable="false" desc="" />
    <ParamRange id="sourceFreq" name="sourceFreq" group="General" default="`${isBlockUsed(sourceClock) ? getExposedMember(sourceClock, &quot;frequency&quot;) : 0}`" min="0" max="400000000" resolution="1" visible="false" editable="false" desc="" />
    
    <ParamSignal port="clk_i2s_if[0]" name="External Interface Clock" group="Timing" visible="true" desc="External interface clock - if unassigned then the CLK_HF1 clock is used." canBeEmpty="true" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="DEFAULT" reason="">
          <Fixed value="CY_GPIO_DM_HIGHZ" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="INFO" reason="The pin Drive Mode parameter does not match expected.">
          <Fixed value="CY_GPIO_DM_HIGHZ" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>
    
    <ParamBool id="extClk" name="Clock From Terminal" group="Timing" default="`${hasConnection(&quot;clk_i2s_if&quot;, 0)}`" visible="false" editable="false" desc="Selects input clock source: external interface clock (from the clk_if terminal) or internal clock (CLK_HF1)" />

    <ParamBool id="mClk" name="Master Clock" group="Timing" default="`${hasConnection(&quot;clk_i2s_if&quot;, 0)}`" visible="`${(version &gt; 1)}`" editable="true" desc="Enables Master clock : Enables MCLK divider operation. If disabled allows MCLK divider to reach all 0's state. " />
    
    <ParamRange  id="i2sClk" name="Input Clock Frequency (kHz)" group="Timing" default="`${sourceFreq / 1000}`" min="0" max="400000000" resolution="0.001" visible="true" editable="`${extClk}`" desc="Shows the actual input clock frequency in case of internal I2S clock using (Clock From Terminal is unassigned), and is editable in case of using the external I2S interface clock from terminal - the expected external clock frequency should be entered in kHz." />
    
    <ParamRange id="clockDiv" name="Clock Divider" group="Timing" default="16" min="1" max="64" resolution="1" visible="true" editable="true" desc="Sets the input Clock Divider" />
    <ParamRange id="bitRate" name="Bit Rate (kbps)" group="Timing" default="`${i2sClk / clockDiv / 8}`" min="0" max="10000000" resolution="0.001" visible="true" editable="false" desc="Shows the actual bit rate" />

    <ParamChoice id="mclockDiv" name="Master Clock Divider" group="Timing" default="CY_I2S_MCLK_DIV_8" visible="`${(mClk) &amp;&amp; (version &gt; 1)}`" editable="true" desc="Selects clock divider for Master clock out." >
      <Entry name="Divide by 1(Bypass)" value="CY_I2S_MCLK_DIV_1" visible="true" />
      <Entry name="Divide by 2" value="CY_I2S_MCLK_DIV_2" visible="true" />
      <Entry name="Divide by 4" value="CY_I2S_MCLK_DIV_4" visible="true" />
      <Entry name="Divide by 8" value="CY_I2S_MCLK_DIV_8" visible="true" />
    </ParamChoice>

    <!-- TX -->
    <ParamBool id="txEnabled" name="Enable" group="TX" default="true" visible="true" editable="true" desc="Enables the transmitter" />
    <ParamChoice id="txMode" name="Mode" group="TX" default="1" visible="`${txEnabled}`" editable="true" desc="Sets mode to master or slave">
      <Entry name="Slave" value="0" visible="true" />
      <Entry name="Master" value="1" visible="true" />
    </ParamChoice>
    <ParamChoice id="txAlignment" name="Alignment" group="TX" default="CY_I2S_I2S_MODE" visible="`${txEnabled}`" editable="true" desc="Set interface transfer mode: I2S, Left Justified, TDM mode A, or TDM mode B">
      <Entry name="Left Justified" value="CY_I2S_LEFT_JUSTIFIED" visible="true" />
      <Entry name="I2S mode" value="CY_I2S_I2S_MODE" visible="true" />
      <Entry name="TDM mode A" value="CY_I2S_TDM_MODE_A" visible="true" />
      <Entry name="TDM mode B" value="CY_I2S_TDM_MODE_B" visible="true" />
    </ParamChoice>
    <ParamRange id="txChannels" name="Channels" group="TX" default="2" min="1" max="8" resolution="1" visible="`${txEnabled}`" editable="true" desc="Number of channels per frame (2 is the only valid value for Left Justified and I2S modes)" />
    <ParamChoice id="txChannelLength" name="Channel Length" group="TX" default="16" visible="`${txEnabled}`" editable="true" desc="Set channel length in bits (32 bit is the only valid value for TDM modes)">
      <Entry name="8" value="8" visible="true" />
      <Entry name="16" value="16" visible="true" />
      <Entry name="18" value="18" visible="true" />
      <Entry name="20" value="20" visible="true" />
      <Entry name="24" value="24" visible="true" />
      <Entry name="32" value="32" visible="true" />
    </ParamChoice>
    <ParamChoice id="txWordLength" name="Word Length" group="TX" default="16" visible="`${txEnabled}`" editable="true" desc="Set word length (in bits)">
      <Entry name="8" value="8" visible="true" />
      <Entry name="16" value="16" visible="true" />
      <Entry name="18" value="18" visible="true" />
      <Entry name="20" value="20" visible="true" />
      <Entry name="24" value="24" visible="true" />
      <Entry name="32" value="32" visible="true" />
    </ParamChoice>

    <ParamRange id="txFrameRate" name="Frame Rate (ksps)" group="TX" default="`${((txAlignment eq CY_I2S_TDM_MODE_A) || (txAlignment eq CY_I2S_TDM_MODE_B)) ? (bitRate / 256) : (bitRate / txChannelLength / 2)}`" min="0" max="10000000" resolution="0.001" visible="`${txEnabled}`" editable="false" desc="Shows the actual frame rate" />

    <ParamChoice id="txOverheadValue" name="Overhead Value" group="TX" default="CY_I2S_OVHDATA_ZERO" visible="`${txEnabled}`" editable="true" desc="Set the overhead bits level (available only when word length is less than channel length). It fills all the channel LSBs (after the data LSB) on SDO wire by 1 or 0">
      <Entry name="0" value="CY_I2S_OVHDATA_ZERO" visible="true" />
      <Entry name="1" value="CY_I2S_OVHDATA_ONE" visible="true" />
    </ParamChoice>
    <ParamChoice id="txWsPulseWidth" name="WS Pulse Width" group="TX" default="CY_I2S_WS_ONE_CHANNEL_LENGTH" visible="`${txEnabled}`" editable="true" desc="Pulse width of the WS signal: one SCK period or one channel length. The one channel length is the only valid value for I2S and Left Justified modes">
      <Entry name="1 SCK period" value="CY_I2S_WS_ONE_SCK_CYCLE" visible="true" />
      <Entry name="1 channel length" value="CY_I2S_WS_ONE_CHANNEL_LENGTH" visible="true" />
    </ParamChoice>
    <ParamChoice id="txSdoLatchingTime" name="SDO Latching Time" group="TX" default="0" visible="`${txEnabled}`" editable="true" desc="Available only in Slave mode; should be Normal in master mode. If Normal – the TX output data is set/changed on the SDO wire at the falling SCK edge (accordingly to the I2S Standard, if TX Output clock polarity is Normal). If Half-clock advanced – the TX output data is set/changed on the SDO wire at the rising SCK edge (if TX Output clock polarity is Normal) which goes before that Normal falling SCK edge, i.e. the SDO waveform is advanced by 0.5 SCK period. If TX Output clock polarity is Inverted – the rising/falling edges just swaps in above explanations. The latching in terms of TX means the real time when the output TX trigger sets the data on SDO wire; that is, the data changing time.">
      <Entry name="Normal" value="0" visible="true" />
      <Entry name="Half-clock advanced" value="1" visible="true" />
    </ParamChoice>
    <ParamChoice id="txSckiPolarity" name="Input Serial Clock Polarity" group="TX" default="0" visible="`${txEnabled}`" editable="`${txMode == 0}`" desc="Polarity of the input SCK signal (available only in slave mode)">
      <Entry name="Normal" value="0" visible="true" />
      <Entry name="Inverted" value="1" visible="true" />
    </ParamChoice>
    <ParamChoice id="txSckoPolarity" name="Output Serial Clock Polarity" group="TX" default="0" visible="`${txEnabled}`" editable="`${txMode == 1}`" desc="Polarity of the output SCK signal (available only in master mode)">
      <Entry name="Normal" value="0" visible="true" />
      <Entry name="Inverted" value="1" visible="true" />
    </ParamChoice>
    <ParamRange id="txFifoTriggerLevel" name="FIFO Trigger Level" group="TX" default="0" min="0" max="255" resolution="1" visible="`${txEnabled}`" editable="true" desc="Set FIFO level to trigger an event (interrupt or DMA request)." />
    <ParamBool id="txDmaTrigger" name="DMA Trigger" group="TX" default="false" visible="`${txEnabled}`" editable="true" desc="Enables DMA trigger" />

    <ParamBool id="txWatchdogEnable" name="Watchdog Enable" group="TX" default="false" visible="`${txEnabled}`" editable="true" desc="Trigger interrupt if Watchdog timer value reaches zero" />
    <ParamRange id="txWatchdogValue" name="Watchdog Value" group="TX" default="4294967295" min="0" max="4294967295" resolution="1" visible="`${txEnabled &amp;&amp; txWatchdogEnable}`" editable="true" desc="The reset value of the Watchdog timer" />

    <!-- RX -->
    <ParamBool id="rxEnabled" name="Enable" group="RX" default="true" visible="true" editable="true" desc="Enables the receiver" />
    <ParamChoice id="rxMode" name="Mode" group="RX" default="1" visible="`${rxEnabled}`" editable="true" desc="Sets mode to master or slave">
      <Entry name="Slave" value="0" visible="true" />
      <Entry name="Master" value="1" visible="true" />
    </ParamChoice>
    <ParamChoice id="rxAlignment" name="Alignment" group="RX" default="CY_I2S_I2S_MODE" visible="`${rxEnabled}`" editable="true" desc="Set interface transfer mode: I2S, Left Justified, TDM mode A, or TDM mode B">
      <Entry name="Left Justified" value="CY_I2S_LEFT_JUSTIFIED" visible="true" />
      <Entry name="I2S mode" value="CY_I2S_I2S_MODE" visible="true" />
      <Entry name="TDM mode A" value="CY_I2S_TDM_MODE_A" visible="true" />
      <Entry name="TDM mode B" value="CY_I2S_TDM_MODE_B" visible="true" />
    </ParamChoice>
    <ParamRange id="rxChannels" name="Channels" group="RX" default="2" min="1" max="8" resolution="1" visible="`${rxEnabled}`" editable="true" desc="Number of channels per frame (2 is the only valid value for Left Justified and I2S modes)" />
    <ParamChoice id="rxChannelLength" name="Channel Length" group="RX" default="16" visible="`${rxEnabled}`" editable="true" desc="Set channel length in bits (32 bit is the only valid value for TDM modes)">
      <Entry name="8"  value="8"  visible="true" />
      <Entry name="16" value="16" visible="true" />
      <Entry name="18" value="18" visible="true" />
      <Entry name="20" value="20" visible="true" />
      <Entry name="24" value="24" visible="true" />
      <Entry name="32" value="32" visible="true" />
    </ParamChoice>
    <ParamChoice id="rxWordLength" name="Word Length" group="RX" default="16" visible="`${rxEnabled}`" editable="true" desc="Set word length (in bits)">
      <Entry name="8"  value="8"  visible="true" />
      <Entry name="16" value="16" visible="true" />
      <Entry name="18" value="18" visible="true" />
      <Entry name="20" value="20" visible="true" />
      <Entry name="24" value="24" visible="true" />
      <Entry name="32" value="32" visible="true" />
    </ParamChoice>

    <ParamRange id="rxFrameRate" name="Frame Rate (ksps)" group="RX" default="`${((rxAlignment eq CY_I2S_TDM_MODE_A) || (rxAlignment eq CY_I2S_TDM_MODE_B)) ? (bitRate / 256) : (bitRate / rxChannelLength / 2)}`" min="0" max="10000000" resolution="0.001" visible="`${rxEnabled}`" editable="false" desc="Shows the actual frame rate" />

    <ParamChoice id="rxSignExtension" name="Sign Extension" group="RX" default="0" visible="`${rxEnabled}`" editable="true" desc="Set the sign extension bits level (available only when word length is less than 32 bit). It fills all the RX FIFO word MSBs by the data word sign bit (MSB) or by 0">
      <Entry name="0" value="0" visible="true" />
      <Entry name="MSB" value="1" visible="true" />
    </ParamChoice>
    <ParamChoice id="rxWsPulseWidth" name="WS Pulse Width" group="RX" default="CY_I2S_WS_ONE_CHANNEL_LENGTH" visible="`${rxEnabled}`" editable="true" desc="Pulse width of the WS signal: one SCK period or one channel length. The one channel length is the only valid value for I2S and Left Justified modes">
      <Entry name="1 SCK period" value="CY_I2S_WS_ONE_SCK_CYCLE" visible="true" />
      <Entry name="1 channel length" value="CY_I2S_WS_ONE_CHANNEL_LENGTH" visible="true" />
    </ParamChoice>
    <ParamChoice id="rxSdiLatchingTime" name="SDI Latching Time" group="RX" default="0" visible="`${rxEnabled}`" editable="true" desc="Available only in Master mode; should be Normal in slave mode. If Normal – the RX input data is captured on the SDI wire at the rising SCK edge (accordingly to the I2S Standard, if RX Output clock polarity is Normal). If Half-clock delayed – the RX input data is captured on the SDI wire at the falling SCK edge (if RX Output clock polarity is Normal) which goes after that Normal rising SCK edge, i.e. the SDI waveform is delayed by 0.5 SCK period. If RX Output clock polarity is Inverted – the rising/falling edges just swaps in above explanations. The latching in terms of RX means the real time when the input RX trigger captures the data on SDI wire, i.e. about at a middle between the data changing edges.">
      <Entry name="Normal" value="0" visible="true" />
      <Entry name="Half-clock delayed" value="1" visible="true" />
    </ParamChoice>
    <ParamChoice id="rxSckiPolarity" name="Input Serial Clock Polarity" group="RX" default="0" visible="`${rxEnabled}`" editable="`${rxMode == 0}`" desc="Polarity of the input SCK signal (available only in slave mode)">
      <Entry name="Normal" value="0" visible="true" />
      <Entry name="Inverted" value="1" visible="true" />
    </ParamChoice>
    <ParamChoice id="rxSckoPolarity" name="Output Serial Clock Polarity" group="RX" default="0" visible="`${rxEnabled}`" editable="`${rxMode == 1}`" desc="Polarity of the output SCK signal (available only in master mode)">
      <Entry name="Normal" value="0" visible="true" />
      <Entry name="Inverted" value="1" visible="true" />
    </ParamChoice>
    <ParamRange id="rxFifoTriggerLevel" name="FIFO Trigger Level" group="RX" default="0" min="0" max="`${255 - rxChannels}`" resolution="1" visible="`${rxEnabled}`" editable="true" desc="Set FIFO level to trigger an event (interrupt or DMA request). Should not be greater than [255 - (number of channels)]." />
    <ParamBool id="rxDmaTrigger" name="DMA Trigger" group="RX" default="false" visible="`${rxEnabled}`" editable="true" desc="Enables DMA trigger" />

    <ParamBool id="rxWatchdogEnable" name="Watchdog Enable" group="RX" default="false" visible="`${rxEnabled}`" editable="true" desc="Trigger interrupt if Watchdog timer value reaches zero" />
    <ParamRange id="rxWatchdogValue" name="Watchdog Value" group="RX" default="4294967295" min="0" max="4294967295" resolution="1" visible="`${rxEnabled &amp;&amp; rxWatchdogEnable}`" editable="true" desc="The reset value of the Watchdog timer" />

    <!-- Connections -->

    <ParamSignal port="tx_sck[0]" name="Tx Serial Clock" group="`${txMode == 1 ? &quot;Outputs&quot; : &quot;Inputs&quot;}`" visible="`${txEnabled}`" desc="Tx serial clock (visible when Tx is enabled)." canBeEmpty="`${(txMode == 1) || !txEnabled}`" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="ERROR" reason="">
          <Fixed value="`${txMode == 1 ? &quot;CY_GPIO_DM_STRONG_IN_OFF&quot; : &quot;CY_GPIO_DM_HIGHZ&quot;}`" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>
    <ParamSignal port="tx_ws[0]" name="Tx Word Select"  group="`${txMode == 1 ? &quot;Outputs&quot; : &quot;Inputs&quot;}`" visible="`${txEnabled}`" desc="Tx word select (visible when Tx is enabled)." canBeEmpty="`${(txMode == 1) || !txEnabled}`" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="ERROR" reason="">
          <Fixed value="`${txMode == 1 ? &quot;CY_GPIO_DM_STRONG_IN_OFF&quot; : &quot;CY_GPIO_DM_HIGHZ&quot;}`" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>
    <ParamSignal port="tx_sdo[0]" name="Tx Serial Data"   group="Outputs" visible="`${txEnabled}`" desc="Tx serial data output (visible when Tx is enabled)." canBeEmpty="true" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="ERROR" reason="">
          <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>
    <ParamSignal port="rx_sck[0]" name="Rx Serial Clock" group="`${rxMode == 1 ? &quot;Outputs&quot; : &quot;Inputs&quot;}`" visible="`${rxEnabled}`" desc="Rx serial clock (visible when Rx is enabled)." canBeEmpty="`${(rxMode == 1) || !rxEnabled}`" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="ERROR" reason="">
          <Fixed value="`${rxMode == 1 ? &quot;CY_GPIO_DM_STRONG_IN_OFF&quot; : &quot;CY_GPIO_DM_HIGHZ&quot;}`" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>
    <ParamSignal port="rx_ws[0]" name="Rx Word Select"  group="`${rxMode == 1 ? &quot;Outputs&quot; : &quot;Inputs&quot;}`" visible="`${rxEnabled}`" desc="Rx word select (visible when Rx is enabled)." canBeEmpty="`${(rxMode == 1) || !rxEnabled}`" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="ERROR" reason="">
          <Fixed value="`${rxMode == 1 ? &quot;CY_GPIO_DM_STRONG_IN_OFF&quot; : &quot;CY_GPIO_DM_HIGHZ&quot;}`" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>
    <ParamSignal port="rx_sdi[0]" name="Rx Serial Data"   group="Inputs"  visible="`${rxEnabled}`" desc="Rx serial data input (visible when Rx is enabled)." canBeEmpty="`${!rxEnabled}`" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="ERROR" reason="">
          <Fixed value="CY_GPIO_DM_HIGHZ" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>
    <ParamSignal port="tr_i2s_tx_req[0]" name="Tx DMA Transfer Request Signal" group="Outputs" visible="`${txDmaTrigger &amp;&amp; txEnabled}`" desc="Tx DMA transfer request signal (visible when Tx DMA trigger is enabled)." canBeEmpty="true" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="ERROR" reason="">
          <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>
    <ParamSignal port="tr_i2s_rx_req[0]" name="Rx DMA Transfer Request Signal" group="Outputs" visible="`${rxDmaTrigger &amp;&amp; rxEnabled}`" desc="Rx DMA transfer request signal (visible when Rx DMA trigger is enabled)." canBeEmpty="true" >
      <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
        <Parameter id="DriveModes" severity="ERROR" reason="">
          <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
        </Parameter>
      </Constraint>
      <Constraint type="ACCEPT" targetLocation=".*" valid="true" />
    </ParamSignal>

    <ParamBool id="inFlash" name="Store Config in Flash" group="Advanced" default="true" visible="true" editable="true" desc="Controls whether the configuration structure is stored in flash (const, true) or SRAM (not const, false)." />
    
    <!-- I2S instance number -->
    <ParamString id="InstNumber" name="Instance Number" group="Internal" default="`${getInstNumber(&quot;audioss&quot;)}`" visible="false" editable="false" desc="I2S Instance number." />
    <ParamBool id="hasAudioss1" name="hasAudioss1" group="Internal" default="`${hasBlock(&quot;audioss[1]&quot;)}`" visible="false" editable="false" desc="Check whether device has more than one audioss" />
    
  </Parameters>

  <DRCs>
    <!-- RX direction -->
    <DRC type="ERROR" text="In TDM mode the channel length is fixed 32 bit" condition="`${rxEnabled &amp;&amp; (((rxAlignment eq CY_I2S_TDM_MODE_A) || (rxAlignment eq CY_I2S_TDM_MODE_B)) &amp;&amp; !(rxChannelLength eq 32))}`" />
    <DRC type="ERROR" text="Only &quot;2 channels&quot; is supported during Left Justified or I2S mode" condition="`${rxEnabled &amp;&amp; ((rxAlignment eq CY_I2S_I2S_MODE) || (rxAlignment eq CY_I2S_LEFT_JUSTIFIED)) &amp;&amp; (rxChannels != 2)}`" />
    <DRC type="ERROR" text="RX SDI latching time should be Normal in Slave mode" condition="`${rxEnabled &amp;&amp; ((rxSdiLatchingTime != 0) &amp;&amp; (rxMode == 0))}`" />
    <DRC type="ERROR" text="RX WS Pulse Width: only the &quot;1 channel length&quot; value is possible in I2S or Left Justified modes" condition="`${rxEnabled &amp;&amp; (((rxAlignment eq CY_I2S_I2S_MODE) || (rxAlignment eq CY_I2S_LEFT_JUSTIFIED)) &amp;&amp; !(rxWsPulseWidth eq CY_I2S_WS_ONE_CHANNEL_LENGTH))}`" />
    <DRC type="ERROR" text="RX Word Length value must be less than or equal RX Channel Length." condition="`${rxEnabled &amp;&amp; rxWordLength &gt; rxChannelLength}`" />

    <DRC type="WARNING" text="The Watchdog timer is effective only in slave mode, so it is recommended to uncheck RX Watchdog Enable checkbox in RX master mode" condition="`${rxEnabled &amp;&amp; (rxMode == 1) &amp;&amp; (rxWatchdogEnable == true)}`" />

    <!-- TX direction -->
    <DRC type="ERROR" text="In TDM mode the channel length is fixed 32 bit" condition="`${txEnabled &amp;&amp; (((txAlignment eq CY_I2S_TDM_MODE_A) || (txAlignment eq CY_I2S_TDM_MODE_B)) &amp;&amp; !(txChannelLength eq 32))}`" />
    <DRC type="ERROR" text="Only &quot;2 channels&quot; is supported during Left Justified or I2S mode" condition="`${txEnabled &amp;&amp; ((txAlignment eq CY_I2S_I2S_MODE) || (txAlignment eq CY_I2S_LEFT_JUSTIFIED)) &amp;&amp; (txChannels != 2)}`" />
    <DRC type="ERROR" text="TX SDO latching time should be Normal in Master mode" condition="`${txEnabled &amp;&amp; ((txSdoLatchingTime != 0) &amp;&amp; (txMode == 1))}`" />
    <DRC type="ERROR" text="TX WS Pulse Width: only the &quot;1 channel length&quot; value is possible in I2S or Left Justified modes" condition="`${txEnabled &amp;&amp; (((txAlignment eq CY_I2S_I2S_MODE) || (txAlignment eq CY_I2S_LEFT_JUSTIFIED)) &amp;&amp; !(txWsPulseWidth eq CY_I2S_WS_ONE_CHANNEL_LENGTH))}`" />
    <DRC type="ERROR" text="TX Word Length value must be less than or equal TX Channel Length." condition="`${txEnabled &amp;&amp; txWordLength &gt; txChannelLength}`" />

    <DRC type="WARNING" text="The Watchdog timer is effective only in slave mode, so it is recommended to uncheck TX Watchdog Enable checkbox in TX master mode" condition="`${txEnabled &amp;&amp; (txMode == 1) &amp;&amp; (txWatchdogEnable == true)}`" />
  </DRCs>

  <ConfigFirmware>
    <ConfigInclude value="cy_i2s.h" include="true" />
    <ConfigInclude value="cyhal_hwmgr.h" include="true" guard="defined (CY_USING_HAL)" />
    
    <ConfigDefine name="`${INST_NAME}`_HW" value="I2S`${hasAudioss1 ? InstNumber : &quot;&quot;}`" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_IRQ" value="audioss_`${hasAudioss1 ? InstNumber . &quot;_&quot; : &quot;&quot;}`interrupt_i2s_IRQn" public="true" include="true" />
    
    <ConfigStruct name="`${INST_NAME . &quot;_config&quot;}`" type="cy_stc_i2s_config_t" const="`${inFlash}`" public="true" include="true" >
      <Member name="txEnabled"             value="`${txEnabled}`" />
      <Member name="rxEnabled"             value="`${rxEnabled}`" />
      <Member name="txDmaTrigger"          value="`${txDmaTrigger}`" />
      <Member name="rxDmaTrigger"          value="`${rxDmaTrigger}`" />
      <Member name="clkDiv"                value="`${clockDiv}`" />
      <Member name="extClk"                value="`${extClk}`" />
      <Member name="txMasterMode"          value="`${txMode}`" />
      <Member name="txAlignment"           value="`${txAlignment}`" />
      <Member name="txWsPulseWidth"        value="`${txWsPulseWidth}`" />
      <Member name="txWatchdogEnable"      value="`${txWatchdogEnable}`" />
      <Member name="txWatchdogValue"       value="`${txWatchdogValue}`" />
      <Member name="txSdoLatchingTime"     value="`${txSdoLatchingTime}`" />
      <Member name="txSckoInversion"       value="`${txSckoPolarity}`" />
      <Member name="txSckiInversion"       value="`${txSckiPolarity}`" />
      <Member name="txChannels"            value="`${txChannels}`" />
      <Member name="txChannelLength"       value="CY_I2S_LEN`${txChannelLength}`" />
      <Member name="txWordLength"          value="CY_I2S_LEN`${txWordLength}`" />
      <Member name="txOverheadValue"       value="`${txOverheadValue}`" />
      <Member name="txFifoTriggerLevel"    value="`${txFifoTriggerLevel}`" />
      <Member name="rxMasterMode"          value="`${rxMode}`" />
      <Member name="rxAlignment"           value="`${rxAlignment}`" />
      <Member name="rxWsPulseWidth"        value="`${rxWsPulseWidth}`" />
      <Member name="rxWatchdogEnable"      value="`${rxWatchdogEnable}`" />
      <Member name="rxWatchdogValue"       value="`${rxWatchdogValue}`" />
      <Member name="rxSdiLatchingTime"     value="`${rxSdiLatchingTime}`" />
      <Member name="rxSckoInversion"       value="`${rxSckoPolarity}`" />
      <Member name="rxSckiInversion"       value="`${rxSckiPolarity}`" />
      <Member name="rxChannels"            value="`${rxChannels}`" />
      <Member name="rxChannelLength"       value="CY_I2S_LEN`${rxChannelLength}`" />
      <Member name="rxWordLength"          value="CY_I2S_LEN`${rxWordLength}`" />
      <Member name="rxSignExtension"       value="`${rxSignExtension}`" />
      <Member name="rxFifoTriggerLevel"    value="`${rxFifoTriggerLevel}`" />
      <Member name="mclkEn"                value="`${mClk}`" include="`${(version &gt; 1)}`" />
      <Member name="mclkDiv"               value="`${mclockDiv}`" include="`${(version &gt; 1)}`" />
    </ConfigStruct>
    
    <ConfigStruct name="`${INST_NAME}`_obj" type="cyhal_resource_inst_t" const="true" public="true" include="true" guard="defined (CY_USING_HAL)">
      <Member name="type" value="CYHAL_RSC_I2S" />
      <Member name="block_num" value="`${InstNumber}`U" />
      <Member name="channel_num" value="0U" />
    </ConfigStruct>
    
    <ConfigInstruction value="cyhal_hwmgr_reserve(&amp;`${INST_NAME}`_obj);" include="true" guard="defined (CY_USING_HAL)" />
  </ConfigFirmware>

</Personality>
